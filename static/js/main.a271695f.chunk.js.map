{"version":3,"sources":["images/d20-grey.png","nav/NavBar.js","nav/Footer.js","components/auth/authSettings.js","components/auth/Login.js","components/auth/Register.js","components/DataManager/CharacterManager.js","components/character/CharacterPage.js","components/character/AddCharacter.js","components/character/AddCharacterSkills.js","components/character/AddCharacterThrows.js","components/character/EditCharacter.js","components/DataManager/SpellManager.js","components/spell/SpellList.js","components/DiceRoller.js","components/spell/AddSpell.js","ApplicationViews.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","history","useHistory","className","src","logo","alt","activeClassName","to","onClick","sessionStorage","clear","push","Footer","authApi","userStorageKey","Login","useState","email","loginUser","setLoginUser","existDialog","setExistDialog","open","e","onSubmit","preventDefault","fetch","then","res","json","user","length","exists","setItem","id","htmlFor","type","placeholder","required","autoFocus","value","onChange","event","newUser","target","Register","firstName","lastName","registerUser","setRegisterUser","conflictDialog","setConflictDialog","handleInputChange","handleRegister","userExists","method","headers","body","JSON","stringify","name","createdUser","hasOwnProperty","remoteURL","getCharactersByUserId","userId","response","getCharacterById","characterId","getCharacterSkills","getCharacterThrows","CharacterPage","array","isLoading","setIsLoading","userCharacters","setUserCharacters","character","setCharacter","skill","setSkill","savingThrow","setSavingThrow","characterArr","parseInt","getItem","Response","handleDeleteCharacter","handleClickAddNewCharacter","statModifier","stat","statName","includes","floor","proficiencyBonus","baseStatModifier","useEffect","skillsArr","map","obj","throwsArr","throw","hidden","size","selectedVal","disabled","level","race","class","experience","alignment","armorClass","hitPoints","strength","dexterity","constitution","intelligence","wisdom","charisma","CharacterForm","handleControlledInputChange","newCharacter","maxLength","min","max","CharacterSkills","characterSkills","setCharacterSkills","characters","setCharacters","skills","setSkills","skillId","characterSkillsArr","newSkill","skillsDropdown","addSkill","characterSkillsDropdown","characterSkillId","CharacterThrows","characterThrows","setCharacterThrows","throws","setThrows","throwId","SavingThrow","characterThrowsArr","newThrow","throwsDropdown","alert","characterThrowsDropdown","EditCharacter","useParams","handleFieldChange","stateToChange","editedVal","evt","editedCharacter","editCharacter","SpellList","spells","setSpells","userSpells","handleDeleteSpell","deleteSpell","school","components","description","higherLevels","DiceRoller","roll","setRoll","console","log","handleRoll","Math","random","rollD4","rollD6","rollD8","rollD10","rollD12","rollD20","AddSpell","addedSpell","setAddedSpell","spellArr","parsed","results","slug","index","newSpell","dnd_class","desc","higher_level","ApplicationViews","exact","path","App","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":";iZAAe,G,MAAA,IAA0B,sC,OCK5BA,EAAS,WAClB,IAAMC,EAAUC,cAOhB,OAEI,sBAAKC,UAAU,SAAf,UACI,sBAAKA,UAAU,WAAf,UACI,qBAAKA,UAAU,OAAOC,IAAKC,EAAMC,IAAI,SACrC,oBAAIH,UAAU,YAAd,2BAEJ,qBAAIA,UAAU,UAAd,UACI,oBAAIA,UAAU,WAAd,SACI,cAAC,IAAD,CAASI,gBAAgB,WAAWJ,UAAU,WAAWK,GAAG,cAA5D,0BAEJ,oBAAIL,UAAU,WAAd,SACI,cAAC,IAAD,CAASI,gBAAgB,WAAWJ,UAAU,WAAWK,GAAG,UAA5D,0BAEJ,oBAAIL,UAAU,WAAd,SACI,cAAC,IAAD,CAASI,gBAAgB,WAAWJ,UAAU,WAAWK,GAAG,QAA5D,2BAEJ,oBAAIL,UAAU,WAAd,SACI,cAAC,IAAD,CAASI,gBAAgB,WAAWJ,UAAU,WAAWM,QAvBpD,WACjBC,eAAeC,QACfV,EAAQW,KAAK,WAqB+EJ,GAAG,SAAnF,+BC7BPK,EAAS,WAClB,OACI,wBAAQV,UAAU,SAAlB,SACI,8BACK,iF,cCLJW,EACM,wBADNA,EAED,QAICC,EAAiB,cCDjBC,G,MAAQ,WACjB,MAAkCC,mBAAS,CAAEC,MAAO,KAApD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAsCH,oBAAS,GAA/C,mBAAOI,EAAP,KAAoBC,EAApB,KAEMrB,EAAUC,cA6BhB,OACI,uBAAMC,UAAU,mBAAhB,UACI,yBAAQA,UAAU,sBAAsBoB,KAAMF,EAA9C,UACI,sDACA,wBAAQlB,UAAU,eAAeM,QAAS,SAAAe,GAAC,OAAIF,GAAe,IAA9D,sBAEJ,8BACI,uBAAMnB,UAAU,cAAcsB,SArBtB,SAACD,GACjBA,EAAEE,iBANKC,MAAM,GAAD,OAAIb,EAAJ,YAA+BA,EAA/B,kBAAyDK,EAAUD,QAC1EU,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,QAAIA,EAAKC,QAASD,EAAK,MAOhCH,MAAK,SAAAK,GACEA,GACAvB,eAAewB,QAAQnB,EAAgBkB,EAAOE,IAC9ClC,EAAQW,KAAK,gBAEbU,GAAe,OAYnB,UACI,wDACA,6DACA,sBAAKnB,UAAU,kBAAf,UACI,uBAAOiC,QAAQ,aAAf,qBACA,uBAAOC,KAAK,QACRF,GAAG,QACHhC,UAAU,eACVmC,YAAY,gBACZC,UAAQ,EAACC,WAAS,EAClBC,MAAOtB,EAAUD,MACjBwB,SA7CE,SAACC,GACvB,IAAMC,EAAO,eAAQzB,GACrByB,EAAQD,EAAME,OAAOV,IAAMQ,EAAME,OAAOJ,MACxCrB,EAAawB,SA4CD,sBAAKzC,UAAU,mBAAf,UACI,wBAAQA,UAAU,eAAekC,KAAK,SAAtC,qBAIA,cAAC,IAAD,CAAM7B,GAAG,YAAT,SACI,wBAAQL,UAAU,eAAlB,qCC5Df2C,EAAW,WAEpB,MAAwC7B,mBAAS,CAAE8B,UAAW,GAAIC,SAAU,GAAI9B,MAAO,KAAvF,mBAAO+B,EAAP,KAAqBC,EAArB,KACA,EAA4CjC,oBAAS,GAArD,mBAAOkC,EAAP,KAAuBC,EAAvB,KAEMnD,EAAUC,cAEVmD,EAAoB,SAACV,GACvB,IAAMC,EAAO,eAAQK,GACrBL,EAAQD,EAAME,OAAOV,IAAMQ,EAAME,OAAOJ,MACxCS,EAAgBN,IAUdU,EAAiB,SAAC9B,GACpBA,EAAEE,iBANKC,MAAM,GAAD,OAAIb,EAAJ,YAA+BA,EAA/B,kBAAyDmC,EAAa/B,QAC7EU,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,QAAMA,EAAKC,UAOpBJ,MAAK,SAAC2B,GACEA,EAoBDH,GAAkB,GAnBlBzB,MAAM,GAAD,OAAIb,EAAJ,YAA+BA,GAAoB,CACpD0C,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjB1C,MAAO+B,EAAa/B,MACpB2C,KAAK,GAAD,OAAKZ,EAAaF,UAAlB,YAA+BE,EAAaD,cAGnDpB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAkC,GACEA,EAAYC,eAAe,QAC3BrD,eAAewB,QAAQnB,EAAgB+C,EAAY3B,IACnDlC,EAAQW,KAAK,uBAWzC,OACI,uBAAMT,UAAU,cAAhB,UAEI,yBAAQA,UAAU,0BAA0BoB,KAAM4B,EAAlD,UACI,iFACA,wBAAQhD,UAAU,gBAAgBM,QAAS,SAAAe,GAAC,OAAI4B,GAAkB,IAAlE,sBAGJ,uBAAMjD,UAAU,cAAcsB,SAAU6B,EAAxC,UACI,oBAAInD,UAAU,6BAAd,4CACA,sBAAKA,UAAU,aAAf,UACI,uBAAOiC,QAAQ,YAAf,2BACA,uBAAOC,KAAK,OAAOwB,KAAK,YAAY1B,GAAG,YAAYhC,UAAU,eAAemC,YAAY,aAAaC,UAAQ,EAACC,WAAS,EAACC,MAAOQ,EAAaF,UAAWL,SAAUW,OAErK,sBAAKlD,UAAU,aAAf,UACI,uBAAOiC,QAAQ,WAAf,0BACA,uBAAOC,KAAK,OAAOwB,KAAK,WAAW1B,GAAG,WAAWhC,UAAU,eAAemC,YAAY,YAAYC,UAAQ,EAACE,MAAOQ,EAAaD,SAAUN,SAAUW,OAEvJ,sBAAKlD,UAAU,aAAf,UACI,uBAAOiC,QAAQ,aAAf,sBACA,uBAAOC,KAAK,QAAQwB,KAAK,QAAQ1B,GAAG,QAAQhC,UAAU,eAAemC,YAAY,gBAAgBC,UAAQ,EAACE,MAAOQ,EAAa/B,MAAOwB,SAAUW,OAEnJ,8BACI,wBAAQlD,UAAU,eAAekC,KAAK,SAAS5B,QAAS6C,EAAxD,gCC/EdU,EAAY,wBAGLC,EAAwB,SAACC,GAClC,OAAOvC,MAAM,GAAD,OAAIqC,EAAJ,8BAAmCE,IAC9CtC,MAAK,SAAAuC,GAAQ,OAAIA,EAASrC,WAIlBsC,EAAmB,SAACC,GAC7B,OAAO1C,MAAM,GAAD,OAAIqC,EAAJ,uBAA4BK,IACvCzC,MAAK,SAAAuC,GAAQ,OAAIA,EAASrC,WA8GlBwC,EAAqB,SAACnC,GAC/B,OAAOR,MAAM,GAAD,OAAIqC,EAAJ,wCAA6C7B,EAA7C,mBACXP,MAAK,SAAAuC,GAAQ,OAAIA,EAASrC,WAIlByC,EAAqB,SAACpC,GAC/B,OAAOR,MAAM,GAAD,OAAIqC,EAAJ,wCAA6C7B,EAA7C,mBACXP,MAAK,SAAAuC,GAAQ,OAAIA,EAASrC,W,gBCxHlB0C,EAAgB,WACzB,IAW2BC,EAX3B,EAAkCxD,oBAAS,GAA3C,mBAAOyD,EAAP,KAAkBC,EAAlB,KACA,EAA4C1D,mBAAS,IAArD,mBAAO2D,EAAP,KAAuBC,EAAvB,KACA,EAAkC5D,mBAAS,IAA3C,mBAAO6D,EAAP,KAAkBC,EAAlB,KACA,EAA0B9D,mBAAS,IAAnC,mBAAO+D,EAAP,KAAcC,EAAd,KACA,EAAsChE,mBAAS,IAA/C,mBAAOiE,EAAP,KAAoBC,EAApB,KACMlF,EAAUC,cAGVkF,EAAe,WAAQnB,EAAsBoB,SAAS3E,eAAe4E,QAAQvE,KAAkBa,MAAK,SAAA2D,GAAcV,EAAkBU,OAqCpIC,EAAwB,SAACrD,GDDJ,IAACkC,KCERlC,EDDbR,MAAM,GAAD,OAAIqC,EAAJ,uBAA4BK,GAAe,CACrDb,OAAQ,WACP5B,MAAK,SAAAuC,GAAQ,OAAIA,EAASrC,WCApBF,MAAK,WACFwD,IACAL,EAAaH,EAAe,QAIlCa,EAA6B,SAAC9C,GAChCA,EAAMjB,iBACNiD,GAAa,GACb1E,EAAQW,KAAK,oBAGX8E,EAAe,SAACC,EAAMC,GACxB,OAAIZ,EAAMa,SAASD,IAAaV,EAAYW,SAASD,GAExCE,aAAOH,EAAO,IAAM,GAAMN,SAASP,EAAUiB,kBAE3CD,aAAOH,EAAO,IAAM,IAGjCK,EAAmB,SAACL,GACtB,OAAQG,aAAOH,EAAO,IAAM,IAgBhC,OAbAM,qBAAU,WArDN3B,EAAmBQ,EAAU3C,IACxBP,MAAK,SAAAuC,GACF,IAAM+B,EAAY/B,EAASgC,KAAI,SAAAC,GAAS,OAAOA,EAAIpB,MAAMnB,QACzDoB,EAASiB,QAoDlB,CAACpB,IAEJmB,qBAAU,WAjDN1B,EAAmBO,EAAU3C,IACxBP,MAAK,SAAAuC,GACF,IAAMkC,EAAYlC,EAASgC,KAAI,SAAAC,GAAS,OAAOA,EAAIE,MAAMzC,QACzDsB,EAAekB,QAgDxB,CAACvB,IAGJmB,qBAAU,WACNb,MACD,IAEAR,EAAe5C,OAAS,EAGnB,sBAAK7B,UAAU,cAAf,UAEI,sBAAKA,UAAU,mBAAf,UACI,sBAAKA,UAAU,qBAAf,UACI,uBAAOA,UAAU,gBAAgBoG,OAAQ7B,EAAWtC,QAAQ,YAA5D,oCACA,mBAAGjC,UAAU,sBAAsBoG,QAAS7B,EAA5C,oDACA,wBAAQvC,GAAG,cAAc0B,KAAK,aAAa2C,KAAK,IAAI9D,SA3DpC,SAACC,GACjCgC,GAAa,GACQ,eAAQG,GAA7B,IACI2B,EAAc9D,EAAME,OAAOJ,MAC3BE,EAAME,OAAOV,GAAG0D,SAAS,QACzBY,EAAcpB,SAASoB,IAEPrC,EAAiBqC,GAAa7E,MAAK,SAAAuC,GAAQ,OAAIY,EAAaZ,OAoDhE,UAlFOM,EAmFgBG,EAlFnBH,EAAM0B,KAAI,SAAAC,GAAS,OAAO,wBAAqBjE,GAAI,eAAiBiE,EAAIjE,GAAIM,MAAO2D,EAAIjE,GAA7D,SAAmEiE,EAAIvC,MAA1DuC,EAAIjE,aAqFnD,gCACI,wBAAQhC,UAAU,kBAAkBM,QAASgF,EAA7C,2BACA,cAAC,IAAD,CAAMjF,GAAE,sBAAiBsE,EAAU3C,GAA3B,SAAR,SACI,wBAAQuE,SAAUhC,EAAWvE,UAAU,kBAAvC,8BAEJ,wBAAQA,UAAU,kBAAkBkC,KAAK,SAASqE,SAAUhC,EAAWjE,QAAS,kBAAM+E,EAAsBV,EAAU3C,KAAtH,oCAIR,sBAAKhC,UAAU,gBAAgBoG,OAAQ7B,EAAvC,UACI,sBAAKvE,UAAU,kBAAf,UACI,6BAAK2E,EAAUjB,OACf,sBAAK1D,UAAU,qBAAf,UACI,oBAAGA,UAAU,gBAAb,oBAAqC2E,EAAU6B,MAA/C,IAAuD7B,EAAU8B,KAAjE,IAAwE9B,EAAU+B,MAAlF,OACA,oBAAG1G,UAAU,gBAAb,yBAA0C2E,EAAUgC,cACpD,oBAAG3G,UAAU,gBAAb,wBAAyC2E,EAAUiC,aACnD,oBAAG5G,UAAU,gBAAb,0BAA2C2E,EAAUkC,cACrD,oBAAG7G,UAAU,gBAAb,iCAAkD2E,EAAUiB,oBAC5D,oBAAG5F,UAAU,gBAAb,6BAA8C2E,EAAUmC,mBAIhE,sBAAK9G,UAAU,iBAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,sBAAKA,UAAU,gBAAf,UACI,yCACA,mBAAGA,UAAU,aAAb,SAA2B2E,EAAUoC,WACrC,oBAAG/G,UAAU,aAAb,uBACe6F,EAAiBlB,EAAUoC,gBAG9C,sBAAK/G,UAAU,gBAAf,UACI,0CACA,mBAAGA,UAAU,aAAb,SAA2B2E,EAAUqC,YACrC,oBAAGhH,UAAU,aAAb,uBACe6F,EAAiBlB,EAAUqC,iBAG9C,sBAAKhH,UAAU,gBAAf,UACI,6CACA,mBAAGA,UAAU,aAAb,SAA2B2E,EAAUsC,eACrC,oBAAGjH,UAAU,aAAb,uBACe6F,EAAiBlB,EAAUsC,oBAG9C,sBAAKjH,UAAU,gBAAf,UACI,6CACA,mBAAGA,UAAU,aAAb,SAA2B2E,EAAUuC,eACrC,oBAAGlH,UAAU,aAAb,uBACe6F,EAAiBlB,EAAUuC,oBAG9C,sBAAKlH,UAAU,gBAAf,UACI,uCACA,mBAAGA,UAAU,aAAb,SAA2B2E,EAAUwC,SACrC,oBAAGnH,UAAU,aAAb,uBACe6F,EAAiBlB,EAAUwC,cAG9C,sBAAKnH,UAAU,gBAAf,UACI,yCACA,mBAAGA,UAAU,aAAb,SAA2B2E,EAAUyC,WACrC,oBAAGpH,UAAU,aAAb,uBACe6F,EAAiBlB,EAAUyC,mBAIlD,sBAAKpH,UAAU,kBAAf,UACI,kDACA,6CAAgBuF,EAAaZ,EAAUqC,UAAW,iBAClD,kDAAqBzB,EAAaZ,EAAUwC,OAAQ,sBACpD,yCAAY5B,EAAaZ,EAAUuC,aAAc,aACjD,4CAAe3B,EAAaZ,EAAUoC,SAAU,gBAChD,4CAAexB,EAAaZ,EAAUyC,SAAU,gBAChD,0CAAa7B,EAAaZ,EAAUuC,aAAc,cAClD,0CAAa3B,EAAaZ,EAAUwC,OAAQ,cAC5C,+CAAkB5B,EAAaZ,EAAUyC,SAAU,mBACnD,gDAAmB7B,EAAaZ,EAAUuC,aAAc,oBACxD,2CAAc3B,EAAaZ,EAAUwC,OAAQ,eAC7C,yCAAY5B,EAAaZ,EAAUuC,aAAc,aACjD,6CAAgB3B,EAAaZ,EAAUwC,OAAQ,iBAC/C,8CAAiB5B,EAAaZ,EAAUyC,SAAU,kBAClD,6CAAgB7B,EAAaZ,EAAUyC,SAAU,iBACjD,2CAAc7B,EAAaZ,EAAUuC,aAAc,eACnD,kDAAqB3B,EAAaZ,EAAUqC,UAAW,sBACvD,0CAAazB,EAAaZ,EAAUqC,UAAW,cAC/C,2CAAczB,EAAaZ,EAAUwC,OAAQ,kBAEjD,sBAAKnH,UAAU,kBAAf,UACI,yDACA,2CAAcuF,EAAaZ,EAAUoC,SAAU,eAC/C,4CAAexB,EAAaZ,EAAUqC,UAAW,gBACjD,+CAAkBzB,EAAaZ,EAAUsC,aAAc,mBACvD,+CAAkB1B,EAAaZ,EAAUuC,aAAc,mBACvD,yCAAY3B,EAAaZ,EAAUwC,OAAQ,aAC3C,2CAAc5B,EAAaZ,EAAUyC,SAAU,2BAS/D,sBAAKpH,UAAU,mBAAf,UACI,iEACA,wBAAQA,UAAU,SAASM,QAASgF,EAApC,2BACA,2BChNH+B,G,MAAgB,WACzB,MAAkCvG,oBAAS,GAA3C,mBAAOyD,EAAP,KAAkBC,EAAlB,KAEA,EAAkC1D,mBAAS,CACvC4C,KAAM,GACNK,OAAQmB,SAAS3E,eAAe4E,QAAQvE,IACxC4F,MAAO,EACPC,KAAM,GACNC,MAAO,GACPE,UAAW,GACXD,WAAY,EACZG,UAAW,EACXD,WAAY,EACZjB,iBAAkB,EAClBmB,SAAU,EACVC,UAAW,EACXC,aAAc,EACdC,aAAc,EACdC,OAAQ,EACRC,SAAU,IAhBd,mBAAOzC,EAAP,KAAkBC,EAAlB,KAmBM9E,EAAUC,cAEVuH,EAA8B,SAAC9E,GACjC,IAAM+E,EAAY,eAAQ5C,GACtB2B,EAAc9D,EAAME,OAAOJ,MAC3BE,EAAME,OAAOV,GAAG0D,SAAS,mIACzBY,EAAcpB,SAASoB,IAE3BiB,EAAa/E,EAAME,OAAOV,IAAMsE,EAChC1B,EAAa2C,IAUjB,OACI,qBAAKvH,UAAU,iBAAf,SACI,uBAAMA,UAAU,gBAAhB,UACI,oBAAIA,UAAU,uBAAd,iCACA,mCACI,sBAAKA,UAAU,aAAf,UACI,uBAAOiC,QAAQ,OAAf,mBACA,uBAAOC,KAAK,OAAOF,GAAG,OAAOO,SAAU+E,EAA6BlF,UAAQ,EAACC,WAAS,EAACrC,UAAU,eAAemC,YAAY,GAAGG,MAAOqC,EAAUjB,YAGxJ,mCACI,sBAAK1D,UAAU,aAAf,UACI,uBAAOiC,QAAQ,QAAf,oBACA,uBAAOC,KAAK,SAASsF,UAAU,IAAIC,IAAI,IAAIC,IAAI,KAAK1F,GAAG,QAAQO,SAAU+E,EAA6BlF,UAAQ,EAACC,WAAS,EAACrC,UAAU,eAAemC,YAAY,IAAIG,MAAOqC,EAAU6B,aAG3L,mCACI,sBAAKxG,UAAU,aAAf,UACI,uBAAOiC,QAAQ,OAAf,mBACA,uBAAOC,KAAK,OAAOF,GAAG,OAAOO,SAAU+E,EAA6BlF,UAAQ,EAACC,WAAS,EAACrC,UAAU,eAAemC,YAAY,GAAGG,MAAOqC,EAAU8B,YAGxJ,mCACI,sBAAKzG,UAAU,aAAf,UACI,uBAAOiC,QAAQ,QAAf,oBACA,uBAAOC,KAAK,OAAOF,GAAG,QAAQO,SAAU+E,EAA6BlF,UAAQ,EAACC,WAAS,EAACrC,UAAU,eAAemC,YAAY,GAAGG,MAAOqC,EAAU+B,aAGzJ,mCACI,sBAAK1G,UAAU,aAAf,UACI,uBAAOiC,QAAQ,YAAf,wBACA,uBAAOC,KAAK,OAAOF,GAAG,YAAYO,SAAU+E,EAA6BlF,UAAQ,EAACC,WAAS,EAACrC,UAAU,eAAemC,YAAY,GAAGG,MAAOqC,EAAUiC,iBAG7J,mCACI,sBAAK5G,UAAU,aAAf,UACI,uBAAOiC,QAAQ,aAAf,yBACA,uBAAOC,KAAK,SAASF,GAAG,aAAaO,SAAU+E,EAA6BlF,UAAQ,EAACC,WAAS,EAACrC,UAAU,eAAesC,MAAOqC,EAAUgC,kBAGjJ,mCACI,sBAAK3G,UAAU,aAAf,UACI,uBAAOiC,QAAQ,YAAf,yBACA,uBAAOC,KAAK,SAASsF,UAAU,IAAIC,IAAI,IAAIC,IAAI,MAAM1F,GAAG,YAAYO,SAAU+E,EAA6BlF,UAAQ,EAACC,WAAS,EAACrC,UAAU,eAAesC,MAAOqC,EAAUmC,iBAGhL,mCACI,sBAAK9G,UAAU,aAAf,UACI,uBAAOiC,QAAQ,aAAf,0BACA,uBAAOC,KAAK,SAASsF,UAAU,IAAIC,IAAI,IAAIC,IAAI,KAAK1F,GAAG,aAAaO,SAAU+E,EAA6BlF,UAAQ,EAACC,WAAS,EAACrC,UAAU,eAAesC,MAAOqC,EAAUkC,kBAGhL,mCACI,sBAAK7G,UAAU,aAAf,UACI,uBAAOiC,QAAQ,mBAAf,gCACA,uBAAOC,KAAK,SAASsF,UAAU,IAAIC,IAAI,IAAIC,IAAI,KAAK1F,GAAG,mBAAmBO,SAAU+E,EAA6BlF,UAAQ,EAACC,WAAS,EAACrC,UAAU,eAAesC,MAAOqC,EAAUiB,wBAGtL,mCACI,sBAAK5F,UAAU,aAAf,UACI,uBAAOiC,QAAQ,WAAf,uBACA,uBAAOC,KAAK,SAASsF,UAAU,IAAIC,IAAI,IAAIC,IAAI,KAAK1F,GAAG,WAAWO,SAAU+E,EAA6BlF,UAAQ,EAACC,WAAS,EAACrC,UAAU,eAAesC,MAAOqC,EAAUoC,gBAG9K,mCACI,sBAAK/G,UAAU,aAAf,UACI,uBAAOiC,QAAQ,YAAf,wBACA,uBAAOC,KAAK,SAASsF,UAAU,IAAIC,IAAI,IAAIC,IAAI,KAAK1F,GAAG,YAAYO,SAAU+E,EAA6BlF,UAAQ,EAACC,WAAS,EAACrC,UAAU,eAAesC,MAAOqC,EAAUqC,iBAG/K,mCACI,sBAAKhH,UAAU,aAAf,UACI,uBAAOiC,QAAQ,eAAf,2BACA,uBAAOC,KAAK,SAASsF,UAAU,IAAIC,IAAI,IAAIC,IAAI,KAAK1F,GAAG,eAAeO,SAAU+E,EAA6BlF,UAAQ,EAACC,WAAS,EAACrC,UAAU,eAAesC,MAAOqC,EAAUsC,oBAGlL,mCACI,sBAAKjH,UAAU,aAAf,UACI,uBAAOiC,QAAQ,eAAf,2BACA,uBAAOC,KAAK,SAASsF,UAAU,IAAIC,IAAI,IAAIC,IAAI,KAAK1F,GAAG,eAAeO,SAAU+E,EAA6BlF,UAAQ,EAACC,WAAS,EAACrC,UAAU,eAAesC,MAAOqC,EAAUuC,oBAGlL,mCACI,sBAAKlH,UAAU,aAAf,UACI,uBAAOiC,QAAQ,SAAf,qBACA,uBAAOC,KAAK,SAASsF,UAAU,IAAIC,IAAI,IAAIC,IAAI,KAAK1F,GAAG,SAASO,SAAU+E,EAA6BlF,UAAQ,EAACC,WAAS,EAACrC,UAAU,eAAesC,MAAOqC,EAAUwC,cAG5K,mCACI,sBAAKnH,UAAU,aAAf,UACI,uBAAOiC,QAAQ,WAAf,uBACA,uBAAOC,KAAK,SAASsF,UAAU,IAAIC,IAAI,IAAIC,IAAI,KAAK1F,GAAG,WAAWO,SAAU+E,EAA6BlF,UAAQ,EAACC,WAAS,EAACrC,UAAU,eAAesC,MAAOqC,EAAUyC,gBAG9K,qBAAKpH,UAAU,eAAf,SACA,wBAAQA,UAAU,qBACdM,QAvGiB,SAACkC,GFzBV,IAAC+E,EE0BrB/E,EAAMjB,iBACNiD,GAAa,IF3BQ+C,EE4BR5C,EF3BVnD,MAAM,GAAD,OAAIqC,EAAJ,eAA4B,CACpCR,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBC,KAAM6D,EAAa7D,KACnBK,OAAQwD,EAAaxD,OACrByC,MAAOtB,SAASqC,EAAaf,OAC7BC,KAAMc,EAAad,KACnBC,MAAOa,EAAab,MACpBE,UAAWW,EAAaX,UACxBD,WAAYzB,SAASqC,EAAaZ,YAClCG,UAAW5B,SAASqC,EAAaT,WACjCD,WAAY3B,SAASqC,EAAaV,YAClCjB,iBAAkBV,SAASqC,EAAa3B,kBACxCmB,SAAU7B,SAASqC,EAAaR,UAChCC,UAAW9B,SAASqC,EAAaP,WACjCC,aAAc/B,SAASqC,EAAaN,cACpCC,aAAchC,SAASqC,EAAaL,cACpCC,OAAQjC,SAASqC,EAAaJ,QAC9BC,SAAUlC,SAASqC,EAAaH,cAErC3F,MAAK,SAAAuC,GAAQ,OAAIA,EAASrC,WEKpBF,MAAK,kBAAM3B,EAAQW,KAAK,0BAoGjB8F,SAAUhC,EAFd,oDCxIHoD,G,MAAkB,WAC3B,MAAkC7G,oBAAS,GAA3C,mBAAOyD,EAAP,KAAkBC,EAAlB,KACA,EAA8C1D,mBAAS,IAAvD,mBAAO8G,EAAP,KAAwBC,EAAxB,KACA,EAAoC/G,mBAAS,IAA7C,mBAAOgH,EAAP,KAAmBC,EAAnB,KACA,EAA4BjH,mBAAS,IAArC,mBAAOkH,EAAP,KAAeC,EAAf,KACA,EAA0BnH,mBAAS,CAC/BoD,YAAa,GACbgE,QAAS,KAFb,mBAAOrD,EAAP,KAAcC,EAAd,KAOMiB,EAAY,WH6CXvE,MAAM,GAAD,OAAIqC,EAAJ,YACXpC,MAAK,SAAAuC,GAAQ,OAAIA,EAASrC,UG9CWF,MAAK,SAAA2D,GAAc6C,EAAU7C,OAE7D+C,EAAqB,WAAQhE,EAAmBU,EAAMX,aAAazC,MAAK,SAAA2D,GAAcyC,EAAmBzC,OAE/GU,qBAAU,WACNC,MACD,IAEHD,qBAAU,WAVmBhC,EAAsBoB,SAAS3E,eAAe4E,QAAQvE,KAAkBa,MAAK,SAAA2D,GAAc2C,EAAc3C,QAYnI,IAEHU,qBAAU,WACNqC,MACD,CAACtD,IAEJ,IAA2BP,EAoBrBxE,EAAUC,cAEVuH,EAA8B,SAAC9E,GACjC,IAAM4F,EAAQ,eAAQvD,GAClByB,EAAc9D,EAAME,OAAOJ,MAC3BE,EAAME,OAAOV,GAAG0D,SAAS,QACzBY,EAAcpB,SAASoB,IAE3B8B,EAAS5F,EAAME,OAAOV,IAAMsE,EAC5BxB,EAASsD,IAyBb,OACI,mCACI,sBAAKpI,UAAU,mBAAf,UAEI,uEACA,qBAAKA,UAAU,iBAAf,SAEI,sBAAKA,UAAU,aAAf,UACI,4CACA,wBAAQgC,GAAG,cAAchC,UAAU,gBAAgB0D,KAAK,aAAa2C,KAAK,IAAI9D,SAAU+E,EAAxF,UA/DOhD,EAgEgBwD,EA/DnBxD,EAAM0B,KAAI,SAAAC,GAAS,OAAO,wBAAqBjE,GAAI,eAAiBiE,EAAIjE,GAAIM,MAAO2D,EAAIjE,GAA7D,SAAmEiE,EAAIvC,MAA1DuC,EAAIjE,eAmEvD,wDACA,qBAAKhC,UAAU,iBAAf,SACI,sBAAKA,UAAU,aAAf,UACI,yCACA,wBAAQgC,GAAG,UAAU0B,KAAK,SAAS1D,UAAU,gBAAgBqG,KAAK,IAAI9D,SAAU+E,EAAhF,SAjEG,SAAChD,GAGpB,OAFoBA,EAAM0B,KAAI,SAAAC,GAAS,OAAO,wBAAqBjE,GAAI,WAAaiE,EAAIjE,GAAIM,MAAO2D,EAAIjE,GAAzD,SAA8DiE,EAAIvC,MAArDuC,EAAIjE,OAiE1CqG,CAAeL,UAK5B,wBAAQhG,GAAG,WAAWhC,UAAU,SAASuG,SAAUhC,EAAWjE,QA9C7C,SAACkC,GAC1BA,EAAMjB,iBACNiD,GAAa,GHMG,SAACK,GACrB,OAAOrD,MAAM,GAAD,OAAIqC,EAAJ,oBAAiC,CACzCR,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUoB,KACtBpD,MAAK,SAAAuC,GAAQ,OAAIA,EAASrC,UGZzB2G,CAASzD,GACJpD,MAAK,WACF0G,IACA3D,GAAa,OAwCb,uBACA,yEACA,qBAAKxE,UAAU,iBAAf,SACI,sBAAKA,UAAU,aAAf,UACI,8DACA,wBAAQgC,GAAG,mBAAmBhC,UAAU,gBAAgB0D,KAAK,kBAAkB2C,KAAK,IAAI9D,SAAU+E,EAAlG,SAtEY,SAAChD,GAG7B,OAFoBA,EAAM0B,KAAI,SAAAC,GAAS,OAAO,wBAAqBjE,GAAI,oBAAsBiE,EAAIjE,GAAIM,MAAO2D,EAAIjE,GAAlE,SAAuEiE,EAAIpB,MAAMnB,MAApEuC,EAAIjE,OAsE1CuG,CAAwBX,UAMrC,wBAAQ5F,GAAG,cAAchC,UAAU,SAASuG,SAAUhC,EAAWjE,QA1CnD,SAACkC,GHmDJ,IAACR,EGlDpBQ,EAAMjB,kBHkDcS,EGjDR6C,EAAM2D,iBHkDfhH,MAAM,GAAD,OAAIqC,EAAJ,4BAAiC7B,GAAM,CAC/CqB,OAAQ,WACT5B,MAAK,SAAAuC,GAAQ,OAAIA,EAASrC,WGnDpBF,MAAK,WAAQ0G,QAuCV,0BACJ,uBACA,wBAAQnG,GAAG,WAAWhC,UAAU,SAASM,QAlDrB,SAACkC,GACzBA,EAAMjB,iBACNiD,GAAa,GACb1E,EAAQW,KAAK,uBA+CT,qCACA,8BCzHCgI,EAAkB,WAC3B,MAAkC3H,oBAAS,GAA3C,mBAAOyD,EAAP,KAAkBC,EAAlB,KACA,EAA8C1D,mBAAS,IAAvD,mBAAO4H,EAAP,KAAwBC,EAAxB,KACA,EAAoC7H,mBAAS,IAA7C,mBAAOgH,EAAP,KAAmBC,EAAnB,KACA,EAA4BjH,mBAAS,IAArC,mBAAO8H,EAAP,KAAeC,EAAf,KACA,EAAsC/H,mBAAS,CAC3CoD,YAAa,GACb4E,QAAS,KAFb,mBAAOC,EAAP,KAAoB/D,EAApB,KAOMkB,EAAY,WJmDX1E,MAAM,GAAD,OAAIqC,EAAJ,YACXpC,MAAK,SAAAuC,GAAQ,OAAIA,EAASrC,UIpDWF,MAAK,SAAA2D,GAAcyD,EAAUzD,OAE7D4D,EAAqB,WAAQ5E,EAAmB2E,EAAY7E,aAAazC,MAAK,SAAA2D,GAAcuD,EAAmBvD,OAErHU,qBAAU,WACNI,MACD,IAEHJ,qBAAU,WAVmBhC,EAAsBoB,SAAS3E,eAAe4E,QAAQvE,KAAkBa,MAAK,SAAA2D,GAAc2C,EAAc3C,QAYnI,IAEHU,qBAAU,WACNkD,MACD,CAACD,IAEJ,IAA2BzE,EAqBrBxE,EAAUC,cAEVuH,EAA8B,SAAC9E,GACjC,IAAMyG,EAAQ,eAAQF,GAClBzC,EAAc9D,EAAME,OAAOJ,MAC3BE,EAAME,OAAOV,GAAG0D,SAAS,QACzBY,EAAcpB,SAASoB,IAE3B2C,EAASzG,EAAME,OAAOV,IAAMsE,EAC5BtB,EAAeiE,IA+BnB,OACI,mCACI,sBAAKjJ,UAAU,mBAAf,UACI,8EACA,qBAAKA,UAAU,iBAAf,SACI,sBAAKA,UAAU,aAAf,UACI,4CACA,wBAAQgC,GAAG,cAAchC,UAAU,gBAAgB0D,KAAK,aAAa2C,KAAK,IAAI9D,SAAU+E,EAAxF,UApEOhD,EAqEgBwD,EApEnBxD,EAAM0B,KAAI,SAAAC,GAAS,OAAO,wBAAqBjE,GAAI,eAAiBiE,EAAIjE,GAAIM,MAAO2D,EAAIjE,GAA7D,SAAmEiE,EAAIvC,MAA1DuC,EAAIjE,eAwEvD,+DACA,qBAAKhC,UAAU,iBAAf,SACI,sBAAKA,UAAU,aAAf,UACI,gDACA,wBAAQgC,GAAG,UAAUhC,UAAU,gBAAgB0D,KAAK,SAAS2C,KAAK,IAAI9D,SAAU+E,EAAhF,SAtEG,SAAChD,GAGpB,OAFoBA,EAAM0B,KAAI,SAAAC,GAAS,OAAO,wBAAqBjE,GAAI,iBAAmBiE,EAAIjE,GAAIM,MAAO2D,EAAIjE,GAA/D,SAAoEiE,EAAIvC,MAA3DuC,EAAIjE,OAsE1CkH,CAAeN,UAK5B,wBAAQ5G,GAAG,WAAWhC,UAAU,SAASM,QAjDxB,SAACkC,GAC1BA,EAAMjB,iBACNiD,GAAa,GACbJ,EAAmB2E,EAAY7E,aAAazC,MAAK,SAAAuC,GAE7C,GAAwB,IAApBA,EAASnC,OACT,OAAOsH,MAAM,4DJWL,IAACF,EITJjF,EAASnC,OAAS,KJSdoH,EIRAF,EJSdvH,MAAM,GAAD,OAAIqC,EAAJ,oBAAiC,CACzCR,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUwF,KACtBxH,MAAK,SAAAuC,GAAQ,OAAIA,EAASrC,WIfKF,MAAK,kBAAMuH,OACjCxE,GAAa,QAuCb,uBACA,yEACA,qBAAKxE,UAAU,iBAAf,SACI,sBAAKA,UAAU,aAAf,UACI,qEACA,wBAAQgC,GAAG,kBAAkBhC,UAAU,gBAAgB0D,KAAK,kBAAkB2C,KAAK,IAAI9D,SAAU+E,EAAjG,SA3EY,SAAChD,GAG7B,OAFoBA,EAAM0B,KAAI,SAAAC,GAAS,OAAO,wBAAqBjE,GAAI,oBAAsBiE,EAAIjE,GAAIM,MAAO2D,EAAIjE,GAAlE,SAAuEiE,EAAIE,MAAMzC,MAApEuC,EAAIjE,OA2E1CoH,CAAwBV,UAKrC,wBAAQ1G,GAAG,cAAchC,UAAU,SAASuG,SAAUhC,EAAWjE,QAvCnD,SAACkC,GJmDJ,IAACR,EIlDpBQ,EAAMjB,kBJkDcS,EIjDR+G,EAAYL,gBJkDrBlH,MAAM,GAAD,OAAIqC,EAAJ,4BAAiC7B,GAAM,CAC/CqB,OAAQ,WACT5B,MAAK,SAAAuC,GAAQ,OAAIA,EAASrC,WInDpBF,MAAK,WAAQuH,QAoCV,0BACA,uBACA,wBAAQhH,GAAG,gBAAgBhC,UAAU,SAASM,QA/C9B,SAACkC,GACzBA,EAAMjB,iBACNiD,GAAa,GACb1E,EAAQW,KAAK,gBA4CL,oCACA,6BC9HH4I,G,MAAgB,WACzB,MAAkCvI,mBAAS,IAA3C,mBAAO6D,EAAP,KAAkBC,EAAlB,KACA,EAAkC9D,oBAAS,GAA3C,mBAAkB0D,GAAlB,WAEQN,EAAgBoF,cAAhBpF,YACFpE,EAAUC,cAEVwJ,EAAoB,SAAC/G,GACvB,IAAMgH,EAAa,eAAQ7E,GACvB8E,EAAYjH,EAAME,OAAOJ,MAKzBmH,EADAjH,EAAME,OAAOV,GAAG0D,SAAS,SAGpBlD,EAAME,OAAOV,GAAG0D,SAAS,SAGzBlD,EAAME,OAAOV,GAAG0D,SAAS,UAGzBlD,EAAME,OAAOV,GAAG0D,SAAS,aARlB+D,EAaAvE,SAASuE,GAGzBD,EAAchH,EAAME,OAAOV,IAAMyH,EACjC7E,EAAa4E,IAsCjB,OAPA1D,qBAAU,WACN7B,EAAiBC,GACZzC,MAAK,SAACkD,GACHC,EAAaD,QAEtB,IAGC,qBAAK3E,UAAU,kBAAf,SACI,uBAAMA,UAAU,gBAAhB,UACI,oBAAIA,UAAU,uBAAd,4BACA,mCACI,sBAAKA,UAAU,aAAf,UACI,uBAAOiC,QAAQ,OAAf,mBACA,uBAAOC,KAAK,OAAOF,GAAG,OAAOO,SAAUgH,EAAmBnH,UAAQ,EAACC,WAAS,EAACrC,UAAU,eAAesC,MAAOqC,EAAUjB,YAG/H,mCACI,sBAAK1D,UAAU,aAAf,UACI,uBAAOiC,QAAQ,QAAf,oBACA,uBAAOC,KAAK,SAASsF,UAAU,IAAIC,IAAI,IAAIC,IAAI,KAAK1F,GAAG,QAAQO,SAAUgH,EAAmBnH,UAAQ,EAACC,WAAS,EAACrC,UAAU,eAAesC,MAAOqC,EAAU6B,aAGjK,mCACI,sBAAKxG,UAAU,aAAf,UACI,uBAAOiC,QAAQ,OAAf,mBACA,uBAAOC,KAAK,OAAOF,GAAG,OAAOO,SAAUgH,EAAmBnH,UAAQ,EAACC,WAAS,EAACrC,UAAU,eAAesC,MAAOqC,EAAU8B,YAG/H,mCACI,sBAAKzG,UAAU,aAAf,UACI,uBAAOiC,QAAQ,QAAf,oBACA,uBAAOC,KAAK,OAAOF,GAAG,QAAQO,SAAUgH,EAAmBnH,UAAQ,EAACC,WAAS,EAACrC,UAAU,eAAesC,MAAOqC,EAAU+B,aAGhI,mCACI,sBAAK1G,UAAU,aAAf,UACI,uBAAOiC,QAAQ,YAAf,wBACA,uBAAOC,KAAK,OAAOF,GAAG,YAAYO,SAAUgH,EAAmBnH,UAAQ,EAACC,WAAS,EAACrC,UAAU,eAAesC,MAAOqC,EAAUiC,iBAGpI,mCACI,sBAAK5G,UAAU,aAAf,UACI,uBAAOiC,QAAQ,aAAf,yBACA,uBAAOC,KAAK,SAASF,GAAG,aAAaO,SAAUgH,EAAmBnH,UAAQ,EAACC,WAAS,EAACrC,UAAU,eAAesC,MAAOqC,EAAUgC,kBAGvI,mCACI,sBAAK3G,UAAU,aAAf,UACI,uBAAOiC,QAAQ,YAAf,yBACA,uBAAOC,KAAK,SAASsF,UAAU,IAAIC,IAAI,IAAIC,IAAI,MAAM1F,GAAG,YAAYO,SAAUgH,EAAmBnH,UAAQ,EAACC,WAAS,EAACrC,UAAU,eAAesC,MAAOqC,EAAUmC,iBAGtK,mCACI,sBAAK9G,UAAU,aAAf,UACI,uBAAOiC,QAAQ,aAAf,0BACA,uBAAOC,KAAK,SAASsF,UAAU,IAAIC,IAAI,IAAIC,IAAI,KAAK1F,GAAG,aAAaO,SAAUgH,EAAmBnH,UAAQ,EAACC,WAAS,EAACrC,UAAU,eAAesC,MAAOqC,EAAUkC,kBAGtK,mCACI,sBAAK7G,UAAU,aAAf,UACI,uBAAOiC,QAAQ,mBAAf,gCACA,uBAAOC,KAAK,SAASsF,UAAU,IAAIC,IAAI,IAAIC,IAAI,KAAK1F,GAAG,mBAAmBO,SAAUgH,EAAmBnH,UAAQ,EAACC,WAAS,EAACrC,UAAU,eAAesC,MAAOqC,EAAUiB,wBAG5K,mCACI,sBAAK5F,UAAU,aAAf,UACI,uBAAOiC,QAAQ,WAAf,uBACA,uBAAOC,KAAK,SAASsF,UAAU,IAAIC,IAAI,IAAIC,IAAI,KAAK1F,GAAG,WAAWO,SAAUgH,EAAmBnH,UAAQ,EAACC,WAAS,EAACrC,UAAU,eAAesC,MAAOqC,EAAUoC,gBAGpK,mCACI,sBAAK/G,UAAU,aAAf,UACI,uBAAOiC,QAAQ,YAAf,wBACA,uBAAOC,KAAK,SAASsF,UAAU,IAAIC,IAAI,IAAIC,IAAI,KAAK1F,GAAG,YAAYO,SAAUgH,EAAmBnH,UAAQ,EAACC,WAAS,EAACrC,UAAU,eAAesC,MAAOqC,EAAUqC,iBAGrK,mCACI,sBAAKhH,UAAU,aAAf,UACI,uBAAOiC,QAAQ,eAAf,2BACA,uBAAOC,KAAK,SAASsF,UAAU,IAAIC,IAAI,IAAIC,IAAI,KAAK1F,GAAG,eAAeO,SAAUgH,EAAmBnH,UAAQ,EAACC,WAAS,EAACrC,UAAU,eAAesC,MAAOqC,EAAUsC,oBAGxK,mCACI,sBAAKjH,UAAU,aAAf,UACI,uBAAOiC,QAAQ,eAAf,2BACA,uBAAOC,KAAK,SAASsF,UAAU,IAAIC,IAAI,IAAIC,IAAI,KAAK1F,GAAG,eAAeO,SAAUgH,EAAmBnH,UAAQ,EAACC,WAAS,EAACrC,UAAU,eAAesC,MAAOqC,EAAUuC,oBAGxK,mCACI,sBAAKlH,UAAU,aAAf,UACI,uBAAOiC,QAAQ,SAAf,qBACA,uBAAOC,KAAK,SAASsF,UAAU,IAAIC,IAAI,IAAIC,IAAI,KAAK1F,GAAG,SAASO,SAAUgH,EAAmBnH,UAAQ,EAACC,WAAS,EAACrC,UAAU,eAAesC,MAAOqC,EAAUwC,cAGlK,mCACI,sBAAKnH,UAAU,aAAf,UACI,uBAAOiC,QAAQ,WAAf,uBACA,uBAAOC,KAAK,SAASsF,UAAU,IAAIC,IAAI,IAAIC,IAAI,KAAK1F,GAAG,WAAWO,SAAUgH,EAAmBnH,UAAQ,EAACC,WAAS,EAACrC,UAAU,eAAesC,MAAOqC,EAAUyC,gBAGpK,qBAAKpH,UAAU,eAAf,SACI,wBAAQA,UAAU,sBACdM,QAnII,SAACoJ,GACrBA,EAAInI,iBACJiD,GAAa,GLEQ,SAACmF,GAC1B,OAAOnI,MAAM,GAAD,OAAIqC,EAAJ,uBAA4B8F,EAAgB3H,IAAM,CAC1DqB,OAAQ,MACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUkG,KACtBlI,MAAK,SAAAuC,GAAQ,OAAIA,EAASrC,UKazBiI,CApBwB,CACpB5H,GAAIkC,EACJR,KAAMiB,EAAUjB,KAChBK,OAAQY,EAAUZ,OAClByC,MAAO7B,EAAU6B,MACjBC,KAAM9B,EAAU8B,KAChBC,MAAO/B,EAAU+B,MACjBE,UAAWjC,EAAUiC,UACrBD,WAAYhC,EAAUgC,WACtBG,UAAWnC,EAAUmC,UACrBD,WAAYlC,EAAUkC,WACtBjB,iBAAkBjB,EAAUiB,iBAC5BmB,SAAUpC,EAAUoC,SACpBC,UAAWrC,EAAUqC,UACrBC,aAActC,EAAUsC,aACxBC,aAAcvC,EAAUuC,aACxBC,OAAQxC,EAAUwC,OAClBC,SAAUzC,EAAUyC,WAInB3F,MAAK,kBAAM3B,EAAQW,KAAK,mBAyGjB,uCCvKdoD,EAAY,wBCILgG,G,MAAY,WACrB,IAWoBvF,EAXpB,EAA4BxD,mBAAS,IAArC,mBAAOgJ,EAAP,KAAeC,EAAf,KAEMnI,EAAOsD,SAAS3E,eAAe4E,QAAQvE,IAEvCoJ,EAAa,WDgCU,IAAChI,KC/BRJ,EDgCfJ,MAAM,GAAD,OAAIqC,EAAJ,0BAA+B7B,IAC1CP,MAAK,SAAA2D,GAAQ,OAAIA,EAASzD,WChClBF,MAAK,SAAAuC,GAAc+F,EAAU/F,OA0BhCiG,EAAoB,SAACjI,IDUJ,SAACA,GACxB,OAAOR,MAAM,GAAD,OAAIqC,EAAJ,mBAAwB7B,GAAM,CACtCqB,OAAQ,WACT5B,MAAK,SAAAuC,GAAQ,OAAIA,EAASrC,WCZzBuI,CAAYlI,GACPP,MAAK,WACFuI,QAQZ,OAJAlE,qBAAU,WACNkE,MACD,IAGC,mCACI,sBAAKhK,UAAU,YAAf,UACI,cAAC,IAAD,CAAMA,UAAU,YAAYK,GAAE,cAA9B,SACI,wBAAQL,UAAU,SAAlB,0BAGJ,qBAAKA,UAAU,YAAf,UAvCQsE,EAwCQwF,EAvCNxF,EAAM0B,KAAI,SAAAC,GACxB,OACI,sBAAKjG,UAAU,YAAf,UACI,sBAAKA,UAAU,mBAAf,UACI,6BAAKiG,EAAIvC,OACT,4BAAIuC,EAAIO,QACR,4BAAIP,EAAIkE,SACR,4BAAIlE,EAAImE,aACR,4BAAInE,EAAIoE,cACR,4BAAIpE,EAAIqE,kBAEZ,qBAAKtK,UAAU,kBAAf,SACI,wBAAQA,UAAU,SAASM,QAAS,WAAQ2J,EAAkBhE,EAAIjE,KAAlE,4CC3BXuI,G,MAAa,WAEtB,MAAwBzJ,mBAAS,IAAjC,mBAAO0J,EAAP,KAAaC,EAAb,KACA,EAAkC3J,oBAAS,GAA3C,mBAAkB0D,GAAlB,WAEAkG,QAAQC,IAAIH,GACZE,QAAQC,IAAIH,EAAK3I,QAGjB,IA4CM+I,EAAa,SAACpI,GAChBA,EAAMjB,iBACNiD,GAAa,GACW,OAApBhC,EAAME,OAAOV,GA/CN,WACX,IAAIwI,EAAOK,KAAKlF,MAAsB,EAAhBkF,KAAKC,UAAgB,EAE3CL,EAAQ,CAACD,IACThG,GAAa,GA4CTuG,GAEyB,OAApBvI,EAAME,OAAOV,GA1CX,WACX,IAAIwI,EAAOK,KAAKlF,MAAsB,EAAhBkF,KAAKC,UAAgB,EAE3CL,EAAQ,CAACD,IACThG,GAAa,GAuCTwG,GAEyB,OAApBxI,EAAME,OAAOV,GAtCX,WACX,IAAIwI,EAAOK,KAAKlF,MAAsB,EAAhBkF,KAAKC,UAAgB,EAE3CL,EAAQ,CAACD,IACThG,GAAa,GAmCTyG,GAEyB,QAApBzI,EAAME,OAAOV,GAlCV,WACZ,IAAIwI,EAAOK,KAAKlF,MAAsB,GAAhBkF,KAAKC,UAAiB,EAE5CL,EAAQ,CAACD,IACThG,GAAa,GA+BT0G,GAEyB,QAApB1I,EAAME,OAAOV,GA9BV,WACZ,IAAIwI,EAAOK,KAAKlF,MAAsB,GAAhBkF,KAAKC,UAAiB,EAE5CL,EAAQ,CAACD,IACThG,GAAa,GA2BT2G,GAEyB,QAApB3I,EAAME,OAAOV,IA1BV,WACZ,IAAIwI,EAAOK,KAAKlF,MAAsB,GAAhBkF,KAAKC,UAAiB,EAE5CL,EAAQ,CAACD,IACThG,GAAa,GAuBT4G,IAIR,OAAGZ,EAAK3I,OAAS,EAGT,sBAAK7B,UAAU,WAAf,UACI,sBAAKA,UAAU,eAAf,UACI,wBAAQgC,GAAG,KAAK1B,QAASsK,EAAY5K,UAAU,SAA/C,qBACA,wBAAQgC,GAAG,KAAK1B,QAASsK,EAAY5K,UAAU,SAA/C,qBACA,wBAAQgC,GAAG,KAAK1B,QAASsK,EAAY5K,UAAU,SAA/C,qBACA,wBAAQgC,GAAG,MAAM1B,QAASsK,EAAY5K,UAAU,SAAhD,sBACA,wBAAQgC,GAAG,MAAM1B,QAASsK,EAAY5K,UAAU,SAAhD,sBACA,wBAAQgC,GAAG,MAAM1B,QAASsK,EAAY5K,UAAU,SAAhD,yBAEJ,qBAAKA,UAAU,gBAAf,SACI,qBAAIA,UAAU,aAAd,wBAAuCwK,EAAvC,YAQR,qBAAKxK,UAAU,WAAf,SACI,sBAAKA,UAAU,eAAf,UACI,wBAAQgC,GAAG,KAAK1B,QAASsK,EAAY5K,UAAU,SAA/C,qBACA,wBAAQgC,GAAG,KAAK1B,QAASsK,EAAY5K,UAAU,SAA/C,qBACA,wBAAQgC,GAAG,KAAK1B,QAASsK,EAAY5K,UAAU,SAA/C,qBACA,wBAAQgC,GAAG,MAAM1B,QAASsK,EAAY5K,UAAU,SAAhD,sBACA,wBAAQgC,GAAG,MAAM1B,QAASsK,EAAY5K,UAAU,SAAhD,sBACA,wBAAQgC,GAAG,MAAM1B,QAASsK,EAAY5K,UAAU,SAAhD,6BCtGPqL,EAAW,WACpB,IAmCuB/G,EAnCvB,EAA4BxD,mBAAS,IAArC,mBAAOgJ,EAAP,KAAeC,EAAf,KACA,EAAoCjJ,mBAAS,CACzCiD,OAAQmB,SAAS3E,eAAe4E,QAAQvE,IACxC8C,KAAM,GACNyG,OAAQ,GACR3D,MAAO,GACP4D,WAAY,GACZ1D,MAAO,GACP2D,YAAa,GACbC,aAAc,KARlB,mBAAOgB,EAAP,KAAmBC,EAAnB,KAWMzL,EAAUC,cAqBVyL,EAAW,WHlCVhK,MAAM,4CACZC,MAAK,SAAA2D,GAAQ,OAAIA,EAASzD,UAAQF,MAAK,SAAAgK,GAAW,OAAOA,KGiCrBhK,MAAK,SAAAuC,GAAc+F,EAAU/F,EAAS0H,aAc3E,OALA5F,qBAAU,WACN0F,MACD,IAIC,qBAAKxL,UAAU,cAAf,SACI,iCAEI,2BAAUA,UAAU,gBAApB,UACI,uBAAOiC,QAAQ,gBAAf,6FACA,wBAAQoE,KAAK,KAAKrG,UAAU,oBAAoBuC,SAvC5B,SAACC,GACnB,eAAQ8I,GAAtB,IHNuBK,EGOnBrF,EAAc9D,EAAME,OAAOJ,OHPRqJ,EGSRrF,EHRZ9E,MAAM,uCAAD,OAAwCmK,IACnDlK,MAAK,SAAA2D,GAAQ,OAAIA,EAASzD,UAAQF,MAAK,SAAAgK,GAAW,OAAOA,MGQjDhK,MAAK,SAAAC,GAASA,EAAIgK,QAAQ1F,KAAI,SAAAC,GAASsF,EAActF,UAkC9C,UAlBO3B,EAmBYwF,EAlBXxF,EAAM0B,KAAI,SAAAC,GAAS,OAAO,wBAAuBjE,GAAI,WAAaiE,EAAI2F,MAAOtJ,MAAO2D,EAAI0F,KAA9D,SAAqE1F,EAAIvC,MAA5DuC,EAAI0F,eAqBvD,sBAAK3L,UAAU,eAAf,UACI,wBAAQgC,GAAG,WAAWhC,UAAU,cAAcM,QApCvC,SAACkC,GHPJ,IAACqJ,EGQjBrJ,EAAMjB,kBHRWsK,EGSRP,EHRN9J,MAAM,GAAD,OAAIqC,EAAJ,WAAwB,CAChCR,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBM,OAAQmB,SAAS3E,eAAe4E,QAAQvE,IACxC8C,KAAMmI,EAASnI,KACfyG,OAAQ0B,EAAS1B,OACjB3D,MAAOqF,EAASrF,MAChB4D,WAAYyB,EAASzB,WACrB1D,MAAOmF,EAASC,UAChBzB,YAAawB,EAASE,KACtBzB,aAAcuB,EAASG,iBAG9BvK,MAAK,SAAA2D,GAAQ,OAAIA,EAASzD,WGPlBF,MAAK,SAAAuC,GAAcmF,MAAM,kCAiClB,uBACA,wBAAQnH,GAAG,YAAYhC,UAAU,cAAcM,QA/BlC,SAACkC,GAC1BA,EAAMjB,iBACNzB,EAAQW,KAAK,YA6BD,wCCtDPwL,EAAmB,WAC5B,OACI,qCACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,cAAlB,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,kBAAZ,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,qBAAZ,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,qBAAZ,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,sCAAZ,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,UAAlB,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,cAAZ,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,QAAZ,SACI,cAAC,EAAD,UC3BHC,EAAM,kBAEjB,qCACA,cAAC,IAAD,CACEC,OAAQ,WACN,OAAI9L,eAAe4E,QAAQvE,GAEvB,qCACE,cAAC,EAAD,IACA,qBAAKZ,UAAU,kBAAf,SACA,cAAC,EAAD,MAEA,8BACA,cAAC,EAAD,SAKG,cAAC,IAAD,CAAUK,GAAG,cAK1B,cAAC,IAAD,CAAO8L,KAAK,SAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,YAAZ,SACE,cAAC,EAAD,UCzBWG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB/K,MAAK,YAAkD,IAA/CgL,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAAST,OACP,cAAC,IAAMU,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.a271695f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/d20-grey.60e73155.png\";","import React from 'react';\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\nimport \"./NavBar.css\";\r\nimport logo from '../images/d20-grey.png'\r\n\r\nexport const NavBar = () => {\r\n    const history = useHistory();\r\n\r\n    const handleLogout = () => {\r\n        sessionStorage.clear();\r\n        history.push(\"/login\")\r\n    }\r\n\r\n    return (\r\n\r\n        <nav className=\"navbar\">\r\n            <div className=\"nav-left\">\r\n                <img className=\"logo\" src={logo} alt=\"logo\" />\r\n                <h1 className=\"nav-title\">The Tavern</h1>\r\n            </div>\r\n            <ul className=\"navList\">\r\n                <li className=\"nav-item\">\r\n                    <NavLink activeClassName=\"selected\" className=\"nav-link\" to=\"/characters\">Characters</NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <NavLink activeClassName=\"selected\" className=\"nav-link\" to=\"/spells\">Spell Book</NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <NavLink activeClassName=\"selected\" className=\"nav-link\" to=\"/dice\">Dice Roller</NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <NavLink activeClassName=\"selected\" className=\"nav-link\" onClick={handleLogout} to=\"/Login\"> Logout </NavLink>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}","import \"./NavBar.css\"\r\n\r\nexport const Footer = () => {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <div>\r\n                 <p>&copy; 2021 - Dakota Upchurch - NSS Cohort 47</p>\r\n            </div>\r\n        </footer>\r\n    )\r\n}","// If your json-server API URL or endpoint is different, please change it below!\r\nexport const authApi = {\r\n  localApiBaseUrl: \"http://localhost:8088\",\r\n  endpoint: \"users\"\r\n}\r\n\r\n// The user id is saved under the key app_user_id in session Storage. Change below if needed!\r\nexport const userStorageKey = \"app_user_id\"\r\n\r\n","import React, { useState } from \"react\"\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { authApi, userStorageKey } from \"./authSettings\"\r\nimport \"./Login.css\"\r\n\r\n\r\nexport const Login = () => {\r\n    const [loginUser, setLoginUser] = useState({ email: \"\" })\r\n    const [existDialog, setExistDialog] = useState(false)\r\n\r\n    const history = useHistory()\r\n\r\n    const handleInputChange = (event) => {\r\n        const newUser = { ...loginUser }\r\n        newUser[event.target.id] = event.target.value\r\n        setLoginUser(newUser)\r\n    }\r\n\r\n\r\n    const existingUserCheck = () => {\r\n        return fetch(`${authApi.localApiBaseUrl}/${authApi.endpoint}?email=${loginUser.email}`)\r\n            .then(res => res.json())\r\n            .then(user => user.length ? user[0] : false)\r\n    }\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault()\r\n\r\n        existingUserCheck()\r\n            .then(exists => {\r\n                if (exists) {\r\n                    sessionStorage.setItem(userStorageKey, exists.id)\r\n                    history.push(\"/characters\")\r\n                } else {\r\n                    setExistDialog(true)\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <main className=\"container--login\">\r\n            <dialog className=\"dialog dialog--auth\" open={existDialog}>\r\n                <div>User does not exist</div>\r\n                <button className=\"button-login\" onClick={e => setExistDialog(false)}>Close</button>\r\n            </dialog>\r\n            <div>\r\n                <form className=\"form--login\" onSubmit={handleLogin}>\r\n                    <h1>Welcome to the Tavern!</h1>\r\n                    <h2>Please register or sign in:</h2>\r\n                    <div className=\"email-container\">\r\n                        <label htmlFor=\"inputEmail\"> Email:</label>\r\n                        <input type=\"email\"\r\n                            id=\"email\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Email address\"\r\n                            required autoFocus\r\n                            value={loginUser.email}\r\n                            onChange={handleInputChange} />\r\n                    </div>\r\n                    <div className=\"button-container\">\r\n                        <button className=\"button-login\" type=\"submit\">\r\n                            Sign in\r\n                        </button>\r\n                   \r\n                        <Link to=\"/register\">\r\n                            <button className=\"button-login\">\r\n                                Register\r\n                        </button></Link>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n\r\n        </main>\r\n    )\r\n}\r\n\r\n","import React, { useState } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { authApi, userStorageKey } from \"./authSettings\"\r\nimport \"./Login.css\"\r\n\r\nexport const Register = () => {\r\n\r\n    const [registerUser, setRegisterUser] = useState({ firstName: \"\", lastName: \"\", email: \"\" })\r\n    const [conflictDialog, setConflictDialog] = useState(false)\r\n\r\n    const history = useHistory()\r\n\r\n    const handleInputChange = (event) => {\r\n        const newUser = { ...registerUser }\r\n        newUser[event.target.id] = event.target.value\r\n        setRegisterUser(newUser)\r\n    }\r\n\r\n    const existingUserCheck = () => {\r\n        \r\n        return fetch(`${authApi.localApiBaseUrl}/${authApi.endpoint}?email=${registerUser.email}`)\r\n            .then(res => res.json())\r\n            .then(user => !!user.length)\r\n    }\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault()\r\n\r\n        existingUserCheck()\r\n            .then((userExists) => {\r\n                if (!userExists) {\r\n                    fetch(`${authApi.localApiBaseUrl}/${authApi.endpoint}`, {\r\n                        method: \"POST\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\"\r\n                        },\r\n                        body: JSON.stringify({\r\n                            email: registerUser.email,\r\n                            name: `${registerUser.firstName} ${registerUser.lastName}`\r\n                        })\r\n                    })\r\n                        .then(res => res.json())\r\n                        .then(createdUser => {\r\n                            if (createdUser.hasOwnProperty(\"id\")) {\r\n                                sessionStorage.setItem(userStorageKey, createdUser.id)\r\n                                history.push(\"/characters\")\r\n                            }\r\n                        })\r\n                }\r\n                else {\r\n                    setConflictDialog(true)\r\n                }\r\n            })\r\n\r\n    }\r\n\r\n    return (\r\n        <main className=\"pageWrapper\">\r\n\r\n            <dialog className=\"dialog dialog--password\" open={conflictDialog}>\r\n                <div>Account with that email address already exists</div>\r\n                <button className=\"button--close\" onClick={e => setConflictDialog(false)}>Close</button>\r\n            </dialog>\r\n\r\n            <form className=\"form--login\" onSubmit={handleRegister}>\r\n                <h1 className=\"h3 mb-3 font-weight-normal\">Please register for the Tavern</h1>\r\n                <div className=\"form-field\">\r\n                    <label htmlFor=\"firstName\"> First Name: </label>\r\n                    <input type=\"text\" name=\"firstName\" id=\"firstName\" className=\"form-control\" placeholder=\"First name\" required autoFocus value={registerUser.firstName} onChange={handleInputChange} />\r\n                </div>\r\n                <div className=\"form-field\">\r\n                    <label htmlFor=\"lastName\"> Last Name: </label>\r\n                    <input type=\"text\" name=\"lastName\" id=\"lastName\" className=\"form-control\" placeholder=\"Last name\" required value={registerUser.lastName} onChange={handleInputChange} />\r\n                </div>\r\n                <div className=\"form-field\">\r\n                    <label htmlFor=\"inputEmail\"> Email: </label>\r\n                    <input type=\"email\" name=\"email\" id=\"email\" className=\"form-control\" placeholder=\"Email address\" required value={registerUser.email} onChange={handleInputChange} />\r\n                </div>\r\n                <div>\r\n                    <button className=\"button-login\" type=\"submit\" onClick={handleRegister}> Sign in </button>\r\n                </div>\r\n            </form>\r\n        </main>\r\n    )\r\n}\r\n\r\n","const remoteURL = \"http://localhost:8088\"\r\n\r\n//! This function will get all characters of a given user.\r\nexport const getCharactersByUserId = (userId) => {\r\n    return fetch(`${remoteURL}/characters?userId=${userId}`)\r\n    .then(response => response.json())\r\n};\r\n\r\n//! This function will get a single character for editing/deleting.\r\nexport const getCharacterById = (characterId) => {\r\n    return fetch(`${remoteURL}/characters/${characterId}`)\r\n    .then(response => response.json())\r\n};\r\n\r\n//! This function will add a character to the database.\r\nexport const addCharacter = (newCharacter) => {\r\n    return fetch(`${remoteURL}/characters`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n            name: newCharacter.name,\r\n            userId: newCharacter.userId,\r\n            level: parseInt(newCharacter.level),\r\n            race: newCharacter.race,\r\n            class: newCharacter.class,\r\n            alignment: newCharacter.alignment,\r\n            experience: parseInt(newCharacter.experience),\r\n            hitPoints: parseInt(newCharacter.hitPoints),\r\n            armorClass: parseInt(newCharacter.armorClass),\r\n            proficiencyBonus: parseInt(newCharacter.proficiencyBonus),\r\n            strength: parseInt(newCharacter.strength),\r\n            dexterity: parseInt(newCharacter.dexterity),\r\n            constitution: parseInt(newCharacter.constitution),\r\n            intelligence: parseInt(newCharacter.intelligence),\r\n            wisdom: parseInt(newCharacter.wisdom),\r\n            charisma: parseInt(newCharacter.charisma)\r\n        })\r\n    }).then(response => response.json())\r\n};\r\n\r\n//! This function will edit a character in the database.\r\nexport const editCharacter = (editedCharacter) => {\r\n    return fetch(`${remoteURL}/characters/${editedCharacter.id}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(editedCharacter),\r\n    }).then(response => response.json())\r\n};\r\n\r\n//! This function will delete a character from the database.\r\nexport const deleteCharacter = (characterId) => {\r\n    return fetch(`${remoteURL}/characters/${characterId}`, {\r\n      method: \"DELETE\"\r\n    }).then(response => response.json())\r\n};\r\n\r\n\r\n//! This function will get all skills.\r\nexport const getSkills = () => {\r\n    return fetch(`${remoteURL}/skills`)\r\n    .then(response => response.json())\r\n};\r\n\r\n//! This function will get all saving throws.\r\nexport const getThrows = () => {\r\n    return fetch(`${remoteURL}/throws`)\r\n    .then(response => response.json())\r\n};\r\n\r\n//! This function will join a skill to a character.\r\nexport const addSkill = (skill) => {\r\n    return fetch(`${remoteURL}/characterSkills`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(skill)\r\n    }).then(response => response.json())\r\n};\r\n\r\n//! This function will join a saving throw to a character.\r\nexport const addThrow = (newThrow) => {\r\n    return fetch(`${remoteURL}/characterThrows`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(newThrow)\r\n    }).then(response => response.json())\r\n;}\r\n   \r\n\r\n//! This function will get a skill by it's name.\r\nexport const getSkillByName = (name) => {\r\n    return fetch(`${remoteURL}/skills?name=${name}`)\r\n    .then(response => response.json())\r\n}\r\n\r\n//! This function will get a skill by it's id.\r\nexport const getSkillById = (id) => {\r\n    return fetch(`${remoteURL}/skills?id=${id}`)\r\n    .then(response => response.json())\r\n}\r\n\r\n//! This function will get a saving throw by it's name.\r\nexport const getThrowByName = (name) => {\r\n    return fetch(`${remoteURL}/throws?name=${name}`)\r\n    .then(response => response.json())\r\n}\r\n\r\n//! This function will get a saving throw by it's id.\r\nexport const getThrowById = (id) => {\r\n    return fetch(`${remoteURL}/throws?id=${id}`)\r\n    .then(response => response.json())\r\n}\r\n\r\n//! This function will return an array that contains the skills of a given character.\r\nexport const getCharacterSkills = (id) => {\r\n    return fetch(`${remoteURL}/characterSkills?characterId=${id}&_expand=skill`)\r\n    .then(response => response.json())\r\n}\r\n\r\n//! This function will return an array that contains the saving throws of a given character.\r\nexport const getCharacterThrows = (id) => {\r\n    return fetch(`${remoteURL}/characterThrows?characterId=${id}&_expand=throw`)\r\n    .then(response => response.json())\r\n}\r\n\r\n//! This function will delete a skill from a character.\r\nexport const deleteSkill = (id) => {\r\n    return fetch(`${remoteURL}/characterSkills/${id}`, {\r\n        method: \"DELETE\"\r\n    }).then(response => response.json())\r\n}\r\n\r\n//! This function will delete a saving throw from a character.\r\nexport const deleteThrow = (id) => {\r\n    return fetch(`${remoteURL}/characterThrows/${id}`, {\r\n        method: \"DELETE\"\r\n    }).then(response => response.json())\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { getCharactersByUserId, getCharacterById, deleteCharacter, getCharacterSkills, getCharacterThrows } from '../DataManager/CharacterManager';\r\nimport { userStorageKey } from '../auth/authSettings';\r\nimport './CharacterPage.css'\r\nimport { floor } from 'mathjs'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport const CharacterPage = () => {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [userCharacters, setUserCharacters] = useState([]);\r\n    const [character, setCharacter] = useState([]);\r\n    const [skill, setSkill] = useState([]);\r\n    const [savingThrow, setSavingThrow] = useState([])\r\n    const history = useHistory();\r\n\r\n\r\n    const characterArr = () => { getCharactersByUserId(parseInt(sessionStorage.getItem(userStorageKey))).then(Response => { setUserCharacters(Response) }) };\r\n\r\n\r\n    const characterDropdown = (array) => {\r\n        const dropdownArr = array.map(obj => { return <option key={obj.id} id={\"characters__\" + obj.id} value={obj.id} >{obj.name}</option> })\r\n\r\n        return dropdownArr;\r\n    };\r\n\r\n    const characterSkills = () => {\r\n        getCharacterSkills(character.id)\r\n            .then(response => {\r\n                const skillsArr = response.map(obj => { return obj.skill.name })\r\n                setSkill(skillsArr);\r\n            });\r\n    };\r\n\r\n    const characterThrows = () => {\r\n        getCharacterThrows(character.id)\r\n            .then(response => {\r\n                const throwsArr = response.map(obj => { return obj.throw.name })\r\n                setSavingThrow(throwsArr);\r\n            });\r\n    };\r\n\r\n\r\n    const handleControlledInputChange = (event) => {\r\n        setIsLoading(false)\r\n        let selectedCharacter = { ...character }\r\n        let selectedVal = event.target.value\r\n        if (event.target.id.includes(\"Id\")) {\r\n            selectedVal = parseInt(selectedVal)\r\n        }\r\n        selectedCharacter = getCharacterById(selectedVal).then(response => setCharacter(response))\r\n\r\n    };\r\n\r\n    const handleDeleteCharacter = (id) => {\r\n        deleteCharacter(id)\r\n            .then(() => {\r\n                characterArr()\r\n                setCharacter(userCharacters[0])})\r\n\r\n    };\r\n\r\n    const handleClickAddNewCharacter = (event) => {\r\n        event.preventDefault()\r\n        setIsLoading(true)\r\n        history.push(\"/characters/add\")\r\n    }\r\n\r\n    const statModifier = (stat, statName) => {\r\n        if (skill.includes(statName) || savingThrow.includes(statName)) {\r\n\r\n            return ((floor((stat - 10) / 2)) + parseInt(character.proficiencyBonus))\r\n        }\r\n        else { return (floor((stat - 10) / 2)) }\r\n    };\r\n\r\n    const baseStatModifier = (stat) => {\r\n        return (floor((stat - 10) / 2))\r\n    }\r\n\r\n    useEffect(() => {\r\n        characterSkills()\r\n    }, [character])\r\n\r\n    useEffect(() => {\r\n        characterThrows()\r\n    }, [character])\r\n\r\n\r\n    useEffect(() => {\r\n        characterArr()\r\n    }, []);\r\n\r\n    if(userCharacters.length > 0) {\r\n\r\n        return (\r\n            <div className=\"pageWrapper\">\r\n    \r\n                <div className=\"characterControl\">\r\n                    <div className=\"characterSelection\">\r\n                        <label className=\"selectHeading\" hidden={isLoading} htmlFor=\"character\">Select Your Character:</label>\r\n                        <p className=\"noSelectedCharacter\" hidden={!isLoading}>Select a character to view it's stats!</p>\r\n                        <select id=\"characterId\" name=\"characters\" size=\"5\" onChange={handleControlledInputChange} >\r\n                            {characterDropdown(userCharacters)}\r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n                        <button className=\"characterButton\" onClick={handleClickAddNewCharacter}>Add Character</button>\r\n                        <Link to={`/characters/${character.id}/edit`}>\r\n                            <button disabled={isLoading} className=\"characterButton\">Edit Character</button>\r\n                        </Link>\r\n                        <button className=\"characterButton\" type=\"button\" disabled={isLoading} onClick={() => handleDeleteCharacter(character.id)}>Delete Character</button>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"CharacterInfo\" hidden={isLoading}>\r\n                    <div className=\"CharacterHeader\">\r\n                        <h2>{character.name}</h2>\r\n                        <div className=\"CharacterSubHeader\">\r\n                            <p className=\"subHeaderItem\">Level: {character.level} {character.race} {character.class} </p>\r\n                            <p className=\"subHeaderItem\">Experience: {character.experience}</p>\r\n                            <p className=\"subHeaderItem\">Alignment: {character.alignment}</p>\r\n                            <p className=\"subHeaderItem\">Armor Class: {character.armorClass}</p>\r\n                            <p className=\"subHeaderItem\">Proficiency Bonus: +{character.proficiencyBonus}</p>\r\n                            <p className=\"subHeaderItem\">Max Hit Points: {character.hitPoints}</p>\r\n                        </div>\r\n            \r\n                    </div>\r\n                    <div className=\"CharacterSheet\">\r\n                        <div className=\"CharacterStats\">\r\n                            <div className=\"CharacterStat\">\r\n                                <p>Strength</p>\r\n                                <p className=\"centerStat\">{character.strength}</p>\r\n                                <p className=\"centerStat\">\r\n                                    Modifier: {baseStatModifier(character.strength)}\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"CharacterStat\">\r\n                                <p>Dexterity</p>\r\n                                <p className=\"centerStat\">{character.dexterity}</p>\r\n                                <p className=\"centerStat\">\r\n                                    Modifier: {baseStatModifier(character.dexterity)}\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"CharacterStat\">\r\n                                <p>Constitution</p>\r\n                                <p className=\"centerStat\">{character.constitution}</p>\r\n                                <p className=\"centerStat\">\r\n                                    Modifier: {baseStatModifier(character.constitution)}\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"CharacterStat\">\r\n                                <p>Intelligence</p>\r\n                                <p className=\"centerStat\">{character.intelligence}</p>\r\n                                <p className=\"centerStat\">\r\n                                    Modifier: {baseStatModifier(character.intelligence)}\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"CharacterStat\">\r\n                                <p>Wisdom</p>\r\n                                <p className=\"centerStat\">{character.wisdom}</p>\r\n                                <p className=\"centerStat\">\r\n                                    Modifier: {baseStatModifier(character.wisdom)}\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"CharacterStat\">\r\n                                <p>Charisma</p>\r\n                                <p className=\"centerStat\">{character.charisma}</p>\r\n                                <p className=\"centerStat\">\r\n                                    Modifier: {baseStatModifier(character.charisma)}\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"characterSkills\">\r\n                            <h3>Skill Modifiers:</h3>\r\n                            <p>Acrobatics: {statModifier(character.dexterity, \"Acrobatics\")}</p>\r\n                            <p>Animal Handling: {statModifier(character.wisdom, \"Animal Handling\")}</p>\r\n                            <p>Arcana: {statModifier(character.intelligence, \"Arcana\")}</p>\r\n                            <p>Athletics: {statModifier(character.strength, \"Athletics\")}</p>\r\n                            <p>Deception: {statModifier(character.charisma, \"Deception\")}</p>\r\n                            <p>History: {statModifier(character.intelligence, \"History\")}</p>\r\n                            <p>Insight: {statModifier(character.wisdom, \"Insight\")}</p>\r\n                            <p>Intimidation: {statModifier(character.charisma, \"Intimidation\")}</p>\r\n                            <p>Investigation: {statModifier(character.intelligence, \"Investigation\")}</p>\r\n                            <p>Medicine: {statModifier(character.wisdom, \"Medicine\")}</p>\r\n                            <p>Nature: {statModifier(character.intelligence, \"Nature\")}</p>\r\n                            <p>Perception: {statModifier(character.wisdom, \"Perception\")}</p>\r\n                            <p>Performance: {statModifier(character.charisma, \"Performance\")}</p>\r\n                            <p>Persuasion: {statModifier(character.charisma, \"Persuasion\")}</p>\r\n                            <p>Religion: {statModifier(character.intelligence, \"Religion\")}</p>\r\n                            <p>Sleight of Hand: {statModifier(character.dexterity, \"Sleight of Hand\")}</p>\r\n                            <p>Stealth: {statModifier(character.dexterity, \"Stealth\")}</p>\r\n                            <p>Survival: {statModifier(character.wisdom, \"Survival\")}</p>\r\n                        </div>\r\n                        <div className=\"characterThrows\">\r\n                            <h3>Saving Throw Modifiers:</h3>\r\n                            <p>Strength: {statModifier(character.strength, \"Strength\")}</p>\r\n                            <p>Dexterity: {statModifier(character.dexterity, \"Dexterity\")}</p>\r\n                            <p>Constitution: {statModifier(character.constitution, \"Constitution\")}</p>\r\n                            <p>Intelligence: {statModifier(character.intelligence, \"Intelligence\")}</p>\r\n                            <p>Wisdom: {statModifier(character.wisdom, \"Wisdom\")}</p>\r\n                            <p>Charisma: {statModifier(character.charisma, \"Charisma\")}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div className=\"skillPageWrapper\">\r\n                <h2>Add a character to get started!</h2>\r\n                <button className=\"button\" onClick={handleClickAddNewCharacter}>Add Character</button>\r\n                <hr></hr>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport { addCharacter } from '../DataManager/CharacterManager'\r\nimport { userStorageKey } from '../auth/authSettings'\r\nimport './AddCharacter.css'\r\n\r\nexport const CharacterForm = () => {\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    const [character, setCharacter] = useState({\r\n        name: \"\",\r\n        userId: parseInt(sessionStorage.getItem(userStorageKey)),\r\n        level: 0,\r\n        race: \"\",\r\n        class: \"\",\r\n        alignment: \"\",\r\n        experience: 0,\r\n        hitPoints: 0,\r\n        armorClass: 0,\r\n        proficiencyBonus: 0,\r\n        strength: 0,\r\n        dexterity: 0,\r\n        constitution: 0,\r\n        intelligence: 0,\r\n        wisdom: 0,\r\n        charisma: 0,\r\n    });\r\n\r\n    const history = useHistory();\r\n\r\n    const handleControlledInputChange = (event) => {\r\n        const newCharacter = { ...character }\r\n        let selectedVal = event.target.value\r\n        if (event.target.id.includes(\"level, experience, hitPoints, armorClass, proficiencyBonus, strength, dexterity, constitution, intelligence, wisdom, charisma\")) {\r\n            selectedVal = parseInt(selectedVal)\r\n        }\r\n        newCharacter[event.target.id] = selectedVal\r\n        setCharacter(newCharacter)\r\n    };\r\n\r\n    const handleClickSaveCharacter = (event) => {\r\n        event.preventDefault()\r\n        setIsLoading(true)\r\n        addCharacter(character)\r\n            .then(() => history.push(\"/characters/skills\"))\r\n    };\r\n\r\n    return (\r\n        <div className=\"addPageWrapper\">\r\n            <form className=\"characterForm\">\r\n                <h2 className=\"characterForm__title\">Add a new Character</h2>\r\n                <fieldset>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"name\">Name:</label>\r\n                        <input type=\"text\" id=\"name\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"\" value={character.name} />\r\n                    </div>\r\n                </fieldset>\r\n                <fieldset>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"level\">Level:</label>\r\n                        <input type=\"number\" maxLength=\"2\" min=\"1\" max=\"20\" id=\"level\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"1\" value={character.level} />\r\n                    </div>\r\n                </fieldset>\r\n                <fieldset>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"race\">Race:</label>\r\n                        <input type=\"text\" id=\"race\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"\" value={character.race} />\r\n                    </div>\r\n                </fieldset>\r\n                <fieldset>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"class\">Class:</label>\r\n                        <input type=\"text\" id=\"class\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"\" value={character.class} />\r\n                    </div>\r\n                </fieldset>\r\n                <fieldset>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"alignment\">Alignment:</label>\r\n                        <input type=\"text\" id=\"alignment\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"\" value={character.alignment} />\r\n                    </div>\r\n                </fieldset>\r\n                <fieldset>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"experience\">Experience:</label>\r\n                        <input type=\"number\" id=\"experience\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" value={character.experience} />\r\n                    </div>\r\n                </fieldset>\r\n                <fieldset>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"hitPoints\">Hit Points:</label>\r\n                        <input type=\"number\" maxLength=\"3\" min=\"0\" max=\"300\" id=\"hitPoints\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" value={character.hitPoints} />\r\n                    </div>\r\n                </fieldset>\r\n                <fieldset>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"armorClass\">Armor Class:</label>\r\n                        <input type=\"number\" maxLength=\"2\" min=\"0\" max=\"30\" id=\"armorClass\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" value={character.armorClass} />\r\n                    </div>\r\n                </fieldset>\r\n                <fieldset>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"proficiencyBonus\">Proficiency Bonus:</label>\r\n                        <input type=\"number\" maxLength=\"2\" min=\"0\" max=\"20\" id=\"proficiencyBonus\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" value={character.proficiencyBonus} />\r\n                    </div>\r\n                </fieldset>\r\n                <fieldset>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"strength\">Strength:</label>\r\n                        <input type=\"number\" maxLength=\"2\" min=\"0\" max=\"20\" id=\"strength\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" value={character.strength} />\r\n                    </div>\r\n                </fieldset>\r\n                <fieldset>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"dexterity\">Dexterity:</label>\r\n                        <input type=\"number\" maxLength=\"2\" min=\"0\" max=\"20\" id=\"dexterity\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" value={character.dexterity} />\r\n                    </div>\r\n                </fieldset>\r\n                <fieldset>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"constitution\">Constitution:</label>\r\n                        <input type=\"number\" maxLength=\"2\" min=\"0\" max=\"20\" id=\"constitution\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" value={character.constitution} />\r\n                    </div>\r\n                </fieldset>\r\n                <fieldset>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"intelligence\">Intelligence:</label>\r\n                        <input type=\"number\" maxLength=\"2\" min=\"0\" max=\"20\" id=\"intelligence\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" value={character.intelligence} />\r\n                    </div>\r\n                </fieldset>\r\n                <fieldset>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"wisdom\">Wisdom:</label>\r\n                        <input type=\"number\" maxLength=\"2\" min=\"0\" max=\"20\" id=\"wisdom\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" value={character.wisdom} />\r\n                    </div>\r\n                </fieldset>\r\n                <fieldset>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"charisma\">Charisma:</label>\r\n                        <input type=\"number\" maxLength=\"2\" min=\"0\" max=\"20\" id=\"charisma\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" value={character.charisma} />\r\n                    </div>\r\n                </fieldset>\r\n                <div className=\"centerButton\">\r\n                <button className=\"addCharacterButton\"\r\n                    onClick={handleClickSaveCharacter}\r\n                    disabled={isLoading}>\r\n                    Save Character And Add Skills\r\n            </button>\r\n            </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getCharactersByUserId, addSkill, getSkills, getCharacterSkills, deleteSkill } from '../DataManager/CharacterManager';\r\nimport { userStorageKey } from '../auth/authSettings';\r\nimport \"./CharacterSkills.css\"\r\n\r\nexport const CharacterSkills = () => {\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [characterSkills, setCharacterSkills] = useState([])\r\n    const [characters, setCharacters] = useState([])\r\n    const [skills, setSkills] = useState([])\r\n    const [skill, setSkill] = useState({\r\n        characterId: \"\",\r\n        skillId: \"\"\r\n    });\r\n\r\n    const characterArr = () => { getCharactersByUserId(parseInt(sessionStorage.getItem(userStorageKey))).then(Response => { setCharacters(Response) }) };\r\n\r\n    const skillsArr = () => { getSkills().then(Response => { setSkills(Response) }) }\r\n\r\n    const characterSkillsArr = () => { getCharacterSkills(skill.characterId).then(Response => { setCharacterSkills(Response) }) };\r\n\r\n    useEffect(() => {\r\n        skillsArr()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        characterArr()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        characterSkillsArr()\r\n    }, [skill])\r\n\r\n    const characterDropdown = (array) => {\r\n        const dropdownArr = array.map(obj => { return <option key={obj.id} id={\"characters__\" + obj.id} value={obj.id} >{obj.name}</option> })\r\n\r\n        return dropdownArr;\r\n    }\r\n\r\n    //! value = event.target.value\r\n    const skillsDropdown = (array) => {\r\n        const dropdownArr = array.map(obj => { return <option key={obj.id} id={\"skills__\" + obj.id} value={obj.id}>{obj.name}</option> })\r\n\r\n        return dropdownArr;\r\n    }\r\n\r\n    const characterSkillsDropdown = (array) => {\r\n        const dropdownArr = array.map(obj => { return <option key={obj.id} id={\"characterSkills__\" + obj.id} value={obj.id}>{obj.skill.name}</option> })\r\n\r\n        return dropdownArr;\r\n    }\r\n\r\n\r\n    const history = useHistory();\r\n\r\n    const handleControlledInputChange = (event) => {\r\n        const newSkill = { ...skill }\r\n        let selectedVal = event.target.value\r\n        if (event.target.id.includes(\"Id\")) {\r\n            selectedVal = parseInt(selectedVal)\r\n        }\r\n        newSkill[event.target.id] = selectedVal\r\n        setSkill(newSkill)\r\n    };\r\n\r\n    const handleClickSaveSkill = (event) => {\r\n        event.preventDefault()\r\n        setIsLoading(true)\r\n        addSkill(skill)\r\n            .then(() => {\r\n                characterSkillsArr()\r\n                setIsLoading(false);\r\n            })\r\n    };\r\n\r\n    const handleClickNextPage = (event) => {\r\n        event.preventDefault()\r\n        setIsLoading(true)\r\n        history.push(\"/characters/throws\")\r\n    }\r\n\r\n    const handleDeleteSkill = (event) => {\r\n        event.preventDefault()\r\n        deleteSkill(skill.characterSkillId)\r\n            .then(() => { characterSkillsArr() })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"skillPageWrapper\">\r\n\r\n                <h2>Select a character to add a skill to:</h2>\r\n                <div className=\"skillForm-flex\">\r\n\r\n                    <div className=\"form-group\">\r\n                        <h3>Character:</h3>\r\n                        <select id=\"characterId\" className=\"form-dropdown\" name=\"characters\" size=\"5\" onChange={handleControlledInputChange}>\r\n                            {characterDropdown(characters)}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <h2>Select a skill to add:</h2>\r\n                <div className=\"skillForm-flex\">\r\n                    <div className=\"form-group\">\r\n                        <h3>Skills:</h3>\r\n                        <select id=\"skillId\" name=\"skills\" className=\"form-dropdown\" size=\"5\" onChange={handleControlledInputChange}>\r\n                            {skillsDropdown(skills)}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                <button id=\"addSkill\" className=\"button\" disabled={isLoading} onClick={handleClickSaveSkill}>Add Skill</button>\r\n                <h2>Delete a skill from selected character:</h2>\r\n                <div className=\"skillForm-flex\">\r\n                    <div className=\"form-group\">\r\n                        <h3>Selected Character's Skills:</h3>\r\n                        <select id=\"characterSkillId\" className=\"form-dropdown\" name=\"characterSkills\" size=\"5\" onChange={handleControlledInputChange}>\r\n                            {characterSkillsDropdown(characterSkills)}\r\n                        </select>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <button id=\"deleteSkill\" className=\"button\" disabled={isLoading} onClick={handleDeleteSkill}>Delete Skill</button>\r\n            <hr></hr>\r\n            <button id=\"nextPage\" className=\"button\" onClick={handleClickNextPage}>Next add saving Throws!</button>\r\n            <hr></hr>\r\n            </div>\r\n\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n//! I need to getSkills, set the response to a variable that I can map over to populate a dropdown that I can then get the Id of the selected skill and use that value to add that skill to the characterSkills join table.\r\n\r\n//! I also need to getCharactersByUserId, and set the response to a variable that I can map over for the first dropdown so that only the logged in user's characters will display in the dropdown. This should also allow me to get the characterId value to add the character to the characterSkills join table.\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getCharactersByUserId, addThrow, getThrows, getCharacterThrows, deleteThrow } from '../DataManager/CharacterManager';\r\nimport { userStorageKey } from '../auth/authSettings';\r\nimport \"./CharacterSkills.css\"\r\n\r\nexport const CharacterThrows = () => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [characterThrows, setCharacterThrows] = useState([])\r\n    const [characters, setCharacters] = useState([]);\r\n    const [throws, setThrows] = useState([]);\r\n    const [SavingThrow, setSavingThrow] = useState({\r\n        characterId: \"\",\r\n        throwId: \"\"\r\n    });\r\n\r\n    const characterArr = () => { getCharactersByUserId(parseInt(sessionStorage.getItem(userStorageKey))).then(Response => { setCharacters(Response) }) };\r\n\r\n    const throwsArr = () => { getThrows().then(Response => { setThrows(Response) }) };\r\n\r\n    const characterThrowsArr = () => { getCharacterThrows(SavingThrow.characterId).then(Response => { setCharacterThrows(Response) }) }\r\n\r\n    useEffect(() => {\r\n        throwsArr()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        characterArr()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        characterThrowsArr()\r\n    }, [SavingThrow])\r\n\r\n    const characterDropdown = (array) => {\r\n        const dropdownArr = array.map(obj => { return <option key={obj.id} id={\"characters__\" + obj.id} value={obj.id} >{obj.name}</option> })\r\n\r\n        return dropdownArr;\r\n    }\r\n\r\n    //! value = event.target.value\r\n    const throwsDropdown = (array) => {\r\n        const dropdownArr = array.map(obj => { return <option key={obj.id} id={\"savingThrows__\" + obj.id} value={obj.id}>{obj.name}</option> })\r\n\r\n        return dropdownArr;\r\n    }\r\n\r\n    const characterThrowsDropdown = (array) => {\r\n        const dropdownArr = array.map(obj => { return <option key={obj.id} id={\"characterThrows__\" + obj.id} value={obj.id}>{obj.throw.name}</option> })\r\n\r\n        return dropdownArr;\r\n    }\r\n\r\n\r\n\r\n    const history = useHistory();\r\n\r\n    const handleControlledInputChange = (event) => {\r\n        const newThrow = { ...SavingThrow }\r\n        let selectedVal = event.target.value\r\n        if (event.target.id.includes(\"Id\")) {\r\n            selectedVal = parseInt(selectedVal)\r\n        }\r\n        newThrow[event.target.id] = selectedVal\r\n        setSavingThrow(newThrow)\r\n    };\r\n\r\n\r\n    const handleClickSaveThrow = (event) => {\r\n        event.preventDefault()\r\n        setIsLoading(true)\r\n        getCharacterThrows(SavingThrow.characterId).then(response => {\r\n\r\n            if (response.length === 2) {\r\n                return alert(\"Your character can only be proficient in 2 Saving Throws\")\r\n            }\r\n            else if (response.length < 2) {\r\n                addThrow(SavingThrow).then(() => characterThrowsArr())\r\n                setIsLoading(false)\r\n            }\r\n        })\r\n    };\r\n\r\n    const handleClickNextPage = (event) => {\r\n        event.preventDefault()\r\n        setIsLoading(true)\r\n        history.push(\"/characters\")\r\n    }\r\n\r\n    const handleDeleteThrow = (event) => {\r\n        event.preventDefault()\r\n        deleteThrow(SavingThrow.characterThrows)\r\n            .then(() => { characterThrowsArr() })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"skillPageWrapper\">\r\n                <h2>Select a character to add a saving throw to:</h2>\r\n                <div className=\"skillForm-flex\">\r\n                    <div className=\"form-group\">\r\n                        <h3>Character:</h3>\r\n                        <select id=\"characterId\" className=\"form-dropdown\" name=\"characters\" size=\"5\" onChange={handleControlledInputChange}>\r\n                            {characterDropdown(characters)}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <h2>Select a saving throw to add:</h2>\r\n                <div className=\"skillForm-flex\">\r\n                    <div className=\"form-group\">\r\n                        <h3>Saving Throws:</h3>\r\n                        <select id=\"throwId\" className=\"form-dropdown\" name=\"throws\" size=\"5\" onChange={handleControlledInputChange}>\r\n                            {throwsDropdown(throws)}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                <button id=\"addThrow\" className=\"button\" onClick={handleClickSaveThrow}>Add Throw</button>\r\n                <h2>Delete a throw from selected character:</h2>\r\n                <div className=\"skillForm-flex\">\r\n                    <div className=\"form-group\">\r\n                        <h3>Selected Character's Saving Throws:</h3>\r\n                        <select id=\"characterThrows\" className=\"form-dropdown\" name=\"characterThrows\" size=\"5\" onChange={handleControlledInputChange}>\r\n                            {characterThrowsDropdown(characterThrows)}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                \r\n                <button id=\"deleteThrow\" className=\"button\" disabled={isLoading} onClick={handleDeleteThrow}>Delete Throw</button>\r\n                <hr></hr>\r\n                <button id=\"characterPage\" className=\"button\" onClick={handleClickNextPage}>Back to Character Page</button>\r\n                <hr></hr>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { editCharacter, getCharacterById } from '../DataManager/CharacterManager';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport './EditCharacter.css'\r\n\r\nexport const EditCharacter = () => {\r\n    const [character, setCharacter] = useState({});\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const { characterId } = useParams();\r\n    const history = useHistory();\r\n\r\n    const handleFieldChange = (event) => {\r\n        const stateToChange = { ...character };\r\n        let editedVal = event.target.value;\r\n\r\n       \r\n\r\n        if (event.target.id.includes(\"name\")) {\r\n            editedVal = editedVal\r\n        }\r\n        else if (event.target.id.includes(\"race\")) {\r\n            editedVal = editedVal\r\n        }\r\n        else if (event.target.id.includes(\"class\")) {\r\n            editedVal = editedVal\r\n        }\r\n        else if (event.target.id.includes(\"alignment\")) {\r\n            editedVal = editedVal\r\n        }\r\n        else {\r\n           \r\n            editedVal = parseInt(editedVal)\r\n        }\r\n\r\n        stateToChange[event.target.id] = editedVal;\r\n        setCharacter(stateToChange);\r\n    };\r\n\r\n    const updateCharacter = (evt) => {\r\n        evt.preventDefault();\r\n        setIsLoading(true);\r\n\r\n        const editedCharacter = {\r\n            id: characterId,\r\n            name: character.name,\r\n            userId: character.userId,\r\n            level: character.level,\r\n            race: character.race,\r\n            class: character.class,\r\n            alignment: character.alignment,\r\n            experience: character.experience,\r\n            hitPoints: character.hitPoints,\r\n            armorClass: character.armorClass,\r\n            proficiencyBonus: character.proficiencyBonus,\r\n            strength: character.strength,\r\n            dexterity: character.dexterity,\r\n            constitution: character.constitution,\r\n            intelligence: character.intelligence,\r\n            wisdom: character.wisdom,\r\n            charisma: character.charisma\r\n        };\r\n\r\n        editCharacter(editedCharacter)\r\n            .then(() => history.push(\"/characters\"));\r\n    };\r\n\r\n    useEffect(() => {\r\n        getCharacterById(characterId)\r\n            .then((character) => {\r\n                setCharacter(character);\r\n            });\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"editPageWrapper\">\r\n            <form className=\"characterForm\">\r\n                <h2 className=\"characterForm__title\">Edit Character</h2>\r\n                <fieldset>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"name\">Name:</label>\r\n                        <input type=\"text\" id=\"name\" onChange={handleFieldChange} required autoFocus className=\"form-control\" value={character.name} />\r\n                    </div>\r\n                </fieldset>\r\n                <fieldset>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"level\">Level:</label>\r\n                        <input type=\"number\" maxLength=\"2\" min=\"1\" max=\"20\" id=\"level\" onChange={handleFieldChange} required autoFocus className=\"form-control\" value={character.level} />\r\n                    </div>\r\n                </fieldset>\r\n                <fieldset>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"race\">Race:</label>\r\n                        <input type=\"text\" id=\"race\" onChange={handleFieldChange} required autoFocus className=\"form-control\" value={character.race} />\r\n                    </div>\r\n                </fieldset>\r\n                <fieldset>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"class\">Class:</label>\r\n                        <input type=\"text\" id=\"class\" onChange={handleFieldChange} required autoFocus className=\"form-control\" value={character.class} />\r\n                    </div>\r\n                </fieldset>\r\n                <fieldset>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"alignment\">Alignment:</label>\r\n                        <input type=\"text\" id=\"alignment\" onChange={handleFieldChange} required autoFocus className=\"form-control\" value={character.alignment} />\r\n                    </div>\r\n                </fieldset>\r\n                <fieldset>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"experience\">Experience:</label>\r\n                        <input type=\"number\" id=\"experience\" onChange={handleFieldChange} required autoFocus className=\"form-control\" value={character.experience} />\r\n                    </div>\r\n                </fieldset>\r\n                <fieldset>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"hitPoints\">Hit Points:</label>\r\n                        <input type=\"number\" maxLength=\"3\" min=\"0\" max=\"300\" id=\"hitPoints\" onChange={handleFieldChange} required autoFocus className=\"form-control\" value={character.hitPoints} />\r\n                    </div>\r\n                </fieldset>\r\n                <fieldset>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"armorClass\">Armor Class:</label>\r\n                        <input type=\"number\" maxLength=\"2\" min=\"0\" max=\"30\" id=\"armorClass\" onChange={handleFieldChange} required autoFocus className=\"form-control\" value={character.armorClass} />\r\n                    </div>\r\n                </fieldset>\r\n                <fieldset>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"proficiencyBonus\">Proficiency Bonus:</label>\r\n                        <input type=\"number\" maxLength=\"2\" min=\"0\" max=\"20\" id=\"proficiencyBonus\" onChange={handleFieldChange} required autoFocus className=\"form-control\" value={character.proficiencyBonus} />\r\n                    </div>\r\n                </fieldset>\r\n                <fieldset>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"strength\">Strength:</label>\r\n                        <input type=\"number\" maxLength=\"2\" min=\"0\" max=\"20\" id=\"strength\" onChange={handleFieldChange} required autoFocus className=\"form-control\" value={character.strength} />\r\n                    </div>\r\n                </fieldset>\r\n                <fieldset>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"dexterity\">Dexterity:</label>\r\n                        <input type=\"number\" maxLength=\"2\" min=\"0\" max=\"20\" id=\"dexterity\" onChange={handleFieldChange} required autoFocus className=\"form-control\" value={character.dexterity} />\r\n                    </div>\r\n                </fieldset>\r\n                <fieldset>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"constitution\">Constitution:</label>\r\n                        <input type=\"number\" maxLength=\"2\" min=\"0\" max=\"20\" id=\"constitution\" onChange={handleFieldChange} required autoFocus className=\"form-control\" value={character.constitution} />\r\n                    </div>\r\n                </fieldset>\r\n                <fieldset>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"intelligence\">Intelligence:</label>\r\n                        <input type=\"number\" maxLength=\"2\" min=\"0\" max=\"20\" id=\"intelligence\" onChange={handleFieldChange} required autoFocus className=\"form-control\" value={character.intelligence} />\r\n                    </div>\r\n                </fieldset>\r\n                <fieldset>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"wisdom\">Wisdom:</label>\r\n                        <input type=\"number\" maxLength=\"2\" min=\"0\" max=\"20\" id=\"wisdom\" onChange={handleFieldChange} required autoFocus className=\"form-control\" value={character.wisdom} />\r\n                    </div>\r\n                </fieldset>\r\n                <fieldset>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"charisma\">Charisma:</label>\r\n                        <input type=\"number\" maxLength=\"2\" min=\"0\" max=\"20\" id=\"charisma\" onChange={handleFieldChange} required autoFocus className=\"form-control\" value={character.charisma} />\r\n                    </div>\r\n                </fieldset>\r\n                <div className=\"centerButton\">\r\n                    <button className=\"editCharacterButton\"\r\n                        onClick={updateCharacter}>\r\n                        Update Character\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n}","import { userStorageKey } from '../auth/authSettings';\r\n\r\nconst remoteURL = \"http://localhost:8088\"\r\n\r\n//! This function will make a fetch request to an external api (Open5e) to get a list of spells.\r\nexport const getSpells = () => {\r\n    return fetch(`https://api.open5e.com/spells/?limit=350`)\r\n    .then(Response => Response.json()).then(parsed => {return parsed})\r\n};\r\n\r\n// //! This function will filter the spells by class.\r\n// export const getSpellsByClass = (class) => {\r\n//     return fetch(`api.open5e.com/spells`)\r\n// }\r\n\r\n//! This function will get the information for a single given spell.\r\nexport const getSpellBySlug = (slug) => {\r\n    return fetch(`https://api.open5e.com/spells/?slug=${slug}`)\r\n    .then(Response => Response.json()).then(parsed => {return parsed})\r\n};\r\n\r\n//! This function will add a given spell to the user's spellbook.\r\nexport const addSpell = (newSpell) => {\r\n    return fetch(`${remoteURL}/spells`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n            userId: parseInt(sessionStorage.getItem(userStorageKey)),\r\n            name: newSpell.name,\r\n            school: newSpell.school,\r\n            level: newSpell.level,\r\n            components: newSpell.components,\r\n            class: newSpell.dnd_class,\r\n            description: newSpell.desc,\r\n            higherLevels: newSpell.higher_level\r\n        })\r\n    })\r\n    .then(Response => Response.json())\r\n}; \r\n\r\n//! This function will return a user's spells they have added to their book.\r\nexport const getSpellsByUserId = (id) => {\r\n    return fetch(`${remoteURL}/spells?userId=${id}`)\r\n    .then(Response => Response.json())\r\n};\r\n\r\n//! This function will remove a spell from a user's spell book.\r\nexport const deleteSpell = (id) => {\r\n    return fetch(`${remoteURL}/spells/${id}`, {\r\n        method: \"DELETE\"\r\n    }).then(response => response.json())\r\n};","import React, { useState, useEffect } from 'react'\r\nimport { userStorageKey } from '../auth/authSettings'\r\nimport { getSpellsByUserId, deleteSpell } from '../DataManager/SpellManager'\r\nimport { Link } from 'react-router-dom'\r\nimport './SpellList.css'\r\n\r\nexport const SpellList = () => {\r\n    const [spells, setSpells] = useState([]);\r\n\r\n    const user = parseInt(sessionStorage.getItem(userStorageKey))\r\n\r\n    const userSpells = () => {\r\n        getSpellsByUserId(user)\r\n            .then(response => { setSpells(response) })\r\n    };\r\n\r\n\r\n\r\n    const spellCards = (array) => {\r\n        let spellObject = array.map(obj => {\r\n            return (\r\n                <div className=\"spellCard\">\r\n                    <div className=\"spellCardDetails\">\r\n                        <h2>{obj.name}</h2>\r\n                        <p>{obj.level}</p>\r\n                        <p>{obj.school}</p>\r\n                        <p>{obj.components}</p>\r\n                        <p>{obj.description}</p>\r\n                        <p>{obj.higherLevels}</p>\r\n                    </div>\r\n                    <div className=\"spellCardButton\">\r\n                        <button className=\"button\" onClick={() => { handleDeleteSpell(obj.id) }}>Remove Spell</button>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n        return spellObject;\r\n    };\r\n\r\n    const handleDeleteSpell = (id) => {\r\n        deleteSpell(id)\r\n            .then(() => {\r\n                userSpells()\r\n            })\r\n    };\r\n\r\n    useEffect(() => {\r\n        userSpells()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"spellPage\">\r\n                <Link className=\"addButton\" to={`/spells/add`}>\r\n                    <button className=\"button\" >Add Spells</button>\r\n\r\n                </Link>\r\n                <div className=\"spellBook\">\r\n                    {spellCards(spells)}\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nimport './DiceRoller.css'\r\n\r\nexport const DiceRoller = () => {\r\n\r\n    const [roll, setRoll] = useState([])\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    console.log(roll)\r\n    console.log(roll.length)\r\n\r\n    //! This function will roll a d4.\r\n    const rollD4 = () => {\r\n        let roll = Math.floor(Math.random() * 4) + 1;\r\n\r\n        setRoll([roll]);\r\n        setIsLoading(true);\r\n    };\r\n\r\n    //! This function will roll a d6.\r\n    const rollD6 = () => {\r\n        let roll = Math.floor(Math.random() * 6) + 1;\r\n\r\n        setRoll([roll]);\r\n        setIsLoading(true);\r\n    };\r\n    //! This function will roll a d8.\r\n    const rollD8 = () => {\r\n        let roll = Math.floor(Math.random() * 8) + 1;\r\n\r\n        setRoll([roll]);\r\n        setIsLoading(true);\r\n    };\r\n    //! This function will roll a d10.\r\n    const rollD10 = () => {\r\n        let roll = Math.floor(Math.random() * 10) + 1;\r\n\r\n        setRoll([roll]);\r\n        setIsLoading(true);\r\n    };\r\n    //! This function will roll a d12.\r\n    const rollD12 = () => {\r\n        let roll = Math.floor(Math.random() * 12) + 1;\r\n\r\n        setRoll([roll]);\r\n        setIsLoading(true);\r\n    };\r\n    //! This function will roll a d20.\r\n    const rollD20 = () => {\r\n        let roll = Math.floor(Math.random() * 20) + 1;\r\n\r\n        setRoll([roll]);\r\n        setIsLoading(true)\r\n\r\n    };\r\n\r\n    const handleRoll = (event) => {\r\n        event.preventDefault();\r\n        setIsLoading(true);\r\n        if (event.target.id === \"d4\") {\r\n            rollD4()\r\n        }\r\n        else if (event.target.id === \"d6\") {\r\n            rollD6()\r\n        }\r\n        else if (event.target.id === \"d8\") {\r\n            rollD8()\r\n        }\r\n        else if (event.target.id === \"d10\") {\r\n            rollD10()\r\n        }\r\n        else if (event.target.id === \"d12\") {\r\n            rollD12()\r\n        }\r\n        else if (event.target.id === \"d20\") {\r\n            rollD20()\r\n        }\r\n    }\r\n\r\n    if(roll.length > 0) {\r\n\r\n        return (\r\n            <div className=\"dicePage\">\r\n                <div className=\"buttonLayout\">\r\n                    <button id=\"d4\" onClick={handleRoll} className=\"button\">Roll d4</button>\r\n                    <button id=\"d6\" onClick={handleRoll} className=\"button\">Roll d6</button>\r\n                    <button id=\"d8\" onClick={handleRoll} className=\"button\">Roll d8</button>\r\n                    <button id=\"d10\" onClick={handleRoll} className=\"button\">Roll d10</button>\r\n                    <button id=\"d12\" onClick={handleRoll} className=\"button\">Roll d12</button>\r\n                    <button id=\"d20\" onClick={handleRoll} className=\"button\">Roll d20</button>\r\n                </div>\r\n                <div className=\"rollContainer\">\r\n                    <h2 className=\"rollResult\">You rolled {roll}!</h2>\r\n                </div>\r\n    \r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div className=\"dicePage\">\r\n                <div className=\"buttonLayout\">\r\n                    <button id=\"d4\" onClick={handleRoll} className=\"button\">Roll d4</button>\r\n                    <button id=\"d6\" onClick={handleRoll} className=\"button\">Roll d6</button>\r\n                    <button id=\"d8\" onClick={handleRoll} className=\"button\">Roll d8</button>\r\n                    <button id=\"d10\" onClick={handleRoll} className=\"button\">Roll d10</button>\r\n                    <button id=\"d12\" onClick={handleRoll} className=\"button\">Roll d12</button>\r\n                    <button id=\"d20\" onClick={handleRoll} className=\"button\">Roll d20</button>\r\n                </div>\r\n               \r\n    \r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { userStorageKey } from '../auth/authSettings';\r\nimport { getSpells, getSpellBySlug, addSpell } from '../DataManager/SpellManager';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './SpellList.css'\r\n\r\nexport const AddSpell = () => {\r\n    const [spells, setSpells] = useState([]);\r\n    const [addedSpell, setAddedSpell] = useState({\r\n        userId: parseInt(sessionStorage.getItem(userStorageKey)),\r\n        name: \"\",\r\n        school: \"\",\r\n        level: \"\",\r\n        components: \"\",\r\n        class: \"\",\r\n        description: \"\",\r\n        higherLevels: \"\"\r\n    });\r\n\r\n    const history = useHistory();\r\n\r\n    const handleControlledInputChange = (event) => {\r\n        const newSpell = { ...addedSpell }\r\n        let selectedVal = event.target.value\r\n    \r\n        getSpellBySlug(selectedVal)\r\n            .then(res => { res.results.map(obj => { setAddedSpell(obj) }) })\r\n    }\r\n\r\n    const handleAddSpell = (event) => {\r\n        event.preventDefault()\r\n        addSpell(addedSpell)\r\n            .then(response => { alert(\"Spell added to spell book!\") })\r\n    }\r\n\r\n    const handleClickSpellbook = (event) => {\r\n        event.preventDefault()\r\n        history.push(\"/spells\")\r\n    }\r\n\r\n    const spellArr = () => { getSpells().then(response => { setSpells(response.results) }) }\r\n\r\n    const spellDropdown = (array) => {\r\n        const dropdownArr = array.map(obj => { return <option key={obj.slug} id={\"spells__\" + obj.index} value={obj.slug}>{obj.name}</option> })\r\n\r\n        return dropdownArr\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        spellArr()\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className=\"pageWrapper\">\r\n            <form>\r\n                \r\n                <fieldset className=\"spellDropdown\">\r\n                    <label htmlFor=\"spellDropdown\">Pick a spell and click -Add Spell- to add the selected spell to your Spellbook:</label>\r\n                    <select size=\"10\" className=\"spellDropdownList\" onChange={handleControlledInputChange}>\r\n                        {spellDropdown(spells)}\r\n                    </select>\r\n                </fieldset>\r\n                <div className=\"spellButtons\">\r\n                    <button id=\"addSpell\" className=\"spellButton\" onClick={handleAddSpell}>Add Spell</button>\r\n                    <button id=\"spellbook\" className=\"spellButton\" onClick={handleClickSpellbook}>Back to Spellbook</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { CharacterPage } from './components/character/CharacterPage'\r\nimport { CharacterForm } from './components/character/AddCharacter'\r\nimport { CharacterSkills } from './components/character/AddCharacterSkills'\r\nimport { CharacterThrows } from './components/character/AddCharacterThrows'\r\nimport { EditCharacter } from './components/character/EditCharacter'\r\nimport { SpellList } from './components/spell/SpellList'\r\nimport { DiceRoller } from './components/DiceRoller'\r\nimport { AddSpell } from './components/spell/AddSpell'\r\n\r\n\r\nexport const ApplicationViews = () => {\r\n    return (\r\n        <>\r\n            <Route exact path=\"/characters\">\r\n                <CharacterPage />\r\n            </Route>\r\n            <Route path=\"/characters/add\">\r\n                <CharacterForm />\r\n            </Route>\r\n            <Route path=\"/characters/skills\">\r\n                <CharacterSkills />\r\n            </Route>\r\n            <Route path=\"/characters/throws\">\r\n                <CharacterThrows />\r\n            </Route>\r\n            <Route path=\"/characters/:characterId(\\d+)/edit\">\r\n                <EditCharacter />\r\n            </Route>\r\n            <Route exact path=\"/spells\">\r\n                <SpellList />\r\n            </Route>\r\n            <Route path=\"/spells/add\">\r\n                <AddSpell />\r\n            </Route>\r\n            <Route path=\"/dice\">\r\n                <DiceRoller />\r\n            </Route>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { NavBar } from './nav/NavBar'\r\nimport { Footer } from './nav/Footer'\r\nimport { Login } from './components/auth/Login'\r\nimport { Register } from './components/auth/Register'\r\nimport { ApplicationViews } from './ApplicationViews'\r\nimport { userStorageKey } from './components/auth/authSettings'\r\n\r\n\r\nexport const App = () => (\r\n \r\n  <>\r\n  <Route\r\n    render={() => {\r\n      if (sessionStorage.getItem(userStorageKey)) {\r\n        return (\r\n          <>\r\n            <NavBar />\r\n            <div className=\"applicationView\">\r\n            <ApplicationViews />\r\n            </div>\r\n            <div>\r\n            <Footer />\r\n            </div>\r\n          </>\r\n        )\r\n      } else {\r\n        return <Redirect to=\"/login\" />;\r\n      }\r\n    }}\r\n  />\r\n\r\n  <Route path=\"/login\">\r\n    <Login />\r\n  </Route>\r\n  <Route path=\"/register\">\r\n    <Register />\r\n  </Route>\r\n</>\r\n)\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { App } from './App';\r\nimport reportWebVitals from './reportWebVitals'\r\nimport { HashRouter as Router } from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}